2015-05-05_12:49:39.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@60dbb216
2015-05-05_12:49:39.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@60dbb216
2015-05-05_12:49:39.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@60dbb216
2015-05-05_12:49:39.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@27d8c7b
2015-05-05_12:49:39.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c8b1954
2015-05-05_12:49:39.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@ac93252
2015-05-05_12:49:39.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@303e38e3
2015-05-05_12:49:39.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@303e38e3
2015-05-05_12:49:39.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@303e38e3
2015-05-05_12:49:39.033 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@454c303
2015-05-05_12:49:39.034 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@454c303
2015-05-05_12:49:39.034 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@454c303
2015-05-05_12:49:39.036 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@171f1658
2015-05-05_12:49:39.036 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@171f1658
2015-05-05_12:49:39.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@171f1658
2015-05-05_12:49:39.039 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@26d32be
2015-05-05_12:49:39.039 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@26d32be
2015-05-05_12:49:39.042 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@26d32be
2015-05-05_12:49:39.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6dc1e25
2015-05-05_12:49:39.045 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6dc1e25
2015-05-05_12:49:39.045 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6dc1e25
2015-05-05_12:49:39.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1d6382d7
2015-05-05_12:49:39.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1d6382d7
2015-05-05_12:49:39.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1d6382d7
2015-05-05_12:49:39.049 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1deeb5dc
2015-05-05_12:49:39.049 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1deeb5dc
2015-05-05_12:49:39.049 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1deeb5dc
2015-05-05_12:49:39.051 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f98cb61
2015-05-05_12:49:39.051 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f98cb61
2015-05-05_12:49:39.052 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3030217f
2015-05-05_12:49:39.053 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3030217f
2015-05-05_12:49:39.054 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@412ef5d5
2015-05-05_12:49:39.054 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@412ef5d5
2015-05-05_12:49:39.060 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3106cfe6
2015-05-05_12:49:39.060 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3106cfe6
2015-05-05_12:49:39.103 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@684d43b
2015-05-05_12:49:39.103 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@684d43b
2015-05-05_12:49:39.105 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6ad8942a
2015-05-05_12:49:39.105 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6ad8942a
2015-05-05_12:49:39.107 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3f436d97
2015-05-05_12:49:39.108 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3f436d97
2015-05-05_12:49:39.108 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3f436d97
2015-05-05_12:49:39.109 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9e0352f
2015-05-05_12:49:39.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1dbff960
2015-05-05_12:49:39.112 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1dbff960
2015-05-05_12:49:39.112 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1dbff960
2015-05-05_12:49:39.113 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@793c0a3e
2015-05-05_12:49:39.115 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@50eeb16d
2015-05-05_12:49:39.115 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@50eeb16d
2015-05-05_12:49:39.120 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@9814059
2015-05-05_12:49:39.121 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@9814059
2015-05-05_12:49:39.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5373de5c
2015-05-05_12:49:39.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5373de5c
2015-05-05_12:49:39.123 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5b81ef86
2015-05-05_12:49:39.123 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5b81ef86
2015-05-05_12:49:39.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58e3aadb
2015-05-05_12:49:39.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58e3aadb
2015-05-05_12:49:39.126 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6b467818
2015-05-05_12:49:39.127 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@72f8a8cb
2015-05-05_12:49:39.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5f105441
2015-05-05_12:49:39.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5f105441
2015-05-05_12:49:39.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5f105441
2015-05-05_12:49:39.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@276fbe55
2015-05-05_12:49:39.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@276fbe55
2015-05-05_12:49:39.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@276fbe55
2015-05-05_12:49:39.134 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7347502b
2015-05-05_12:49:39.135 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@b47a76f
2015-05-05_12:49:39.135 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@b47a76f
2015-05-05_12:49:39.135 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@b47a76f
2015-05-05_12:49:39.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5a9b8c3c
2015-05-05_12:49:39.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5a9b8c3c
2015-05-05_12:49:39.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5a9b8c3c
2015-05-05_12:49:39.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@749cb276
2015-05-05_12:49:39.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@71b20bb5
2015-05-05_12:49:39.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71b20bb5
2015-05-05_12:49:39.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@356792ba
2015-05-05_12:49:39.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5fce8cbe
2015-05-05_12:49:39.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5fce8cbe
2015-05-05_12:49:39.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5957b733
2015-05-05_12:49:39.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2a0eed78
2015-05-05_12:49:39.159 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@71e62ff2
2015-05-05_12:49:39.163 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@71e62ff2
2015-05-05_12:49:39.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@62cdf25c
2015-05-05_12:49:39.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2214d848
2015-05-05_12:49:39.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@447ef1e9
2015-05-05_12:49:39.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7a2f1440
2015-05-05_12:49:39.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@777d464b
2015-05-05_12:49:39.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@732f1674
2015-05-05_12:49:39.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@40ed5041
2015-05-05_12:49:39.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@42e2c108
2015-05-05_12:49:39.183 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-05_12:49:39.188 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-05_12:49:39.190 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-05_12:49:39.191 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-05_12:49:39.202 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-05_12:49:39.203 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-05_12:49:39.204 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_12:49:39.207 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_12:49:39.208 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-05_12:49:39.208 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-05_12:49:39.210 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-05_12:49:39.210 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-05_12:49:39.211 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-05_12:49:39.211 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-05_12:49:39.212 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-05_12:49:39.212 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-05_12:49:39.213 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-05_12:49:39.213 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-05_12:49:39.214 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-05_12:49:39.216 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-05_12:49:39.216 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-05_12:49:39.238 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-05_12:49:39.238 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-05_12:49:39.241 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-05_12:49:39.242 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-05_12:49:39.258 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.driver_class=com.mysql.jdbc.Driver
2015-05-05_12:49:39.258 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.password=root
2015-05-05_12:49:39.259 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem
2015-05-05_12:49:39.259 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.username=root
2015-05-05_12:49:39.259 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_12:49:39.259 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - show_sql=true
2015-05-05_12:49:39.259 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.min_size=5
2015-05-05_12:49:39.259 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_size=20
2015-05-05_12:49:39.259 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.timeout=300
2015-05-05_12:49:39.259 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_statements=50
2015-05-05_12:49:39.259 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.idle_test_period=3000
2015-05-05_12:49:39.260 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Session-factory config [null] named class [com.taylan.persistence.DAO.Personaltrainers] for mapping
2015-05-05_12:49:39.267 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000041: Configured SessionFactory: null
2015-05-05_12:49:39.267 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 7, sun.boot.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\sunrsasign.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\classes, user.country.format=GB, sun.desktop=windows, hibernate.c3p0.max_size=20, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_25-b18, hibernate.c3p0.min_size=5, user.name=Asus, user.language.format=en, idea.launcher.bin.path=D:\IntelliJ IDEA 14.1.2\bin, javafx.runtime.version=8.0.25-b18, hibernate.c3p0.timeout=300, user.language=tr, sun.boot.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\bin, java.version=1.8.0_25, user.timezone=Asia/Istanbul, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1254, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=TR, java.home=C:\Program Files (x86)\Java\jdk1.8.0_25\jre, java.vm.info=mixed mode, os.version=6.1, path.separator=;, java.vm.version=25.25-b02, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\Asus, java.specification.vendor=Oracle Corporation, java.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=com.intellij.rt.execution.application.AppMain com.taylan.core.MainApp, java.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\deploy.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\javaws.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfxswt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\management-agent.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\plugin.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\access-bridge-64.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\cldrdata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\dnsns.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jaccess.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jfxrt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\localedata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\nashorn.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunec.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunjce_provider.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunmscapi.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunpkcs11.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\zipfs.jar;C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;D:\IntelliJ IDEA 14.1.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7533, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, hibernate.c3p0.idle_test_period=3000, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, javafx.version=8.0.25, file.encoding=windows-1254, java.specification.version=1.8, hibernate.c3p0.max_statements=50, hibernate.show_sql=true}
2015-05-05_12:49:39.279 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2015-05-05_12:49:39.299 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
2015-05-05_12:49:39.328 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files
2015-05-05_12:49:39.328 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Process annotated classes
2015-05-05_12:49:39.332 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_12:49:39.348 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.QueryBinder - Binding named query: loadPersonalTrainers => from Personaltrainers
2015-05-05_12:49:39.356 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2015-05-05_12:49:39.358 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2015-05-05_12:49:39.364 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Import with entity name Personaltrainers
2015-05-05_12:49:39.367 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Bind entity com.taylan.persistence.DAO.Personaltrainers on table personaltrainers
2015-05-05_12:49:39.396 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=idpersonalTrainers, insertable=true, updatable=true, unique=true}
2015-05-05_12:49:39.401 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property idpersonalTrainers with lazy=false
2015-05-05_12:49:39.404 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for idpersonalTrainers
2015-05-05_12:49:39.405 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property idpersonalTrainers
2015-05-05_12:49:39.409 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=contact, insertable=true, updatable=true, unique=false}
2015-05-05_12:49:39.409 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property contact with lazy=false
2015-05-05_12:49:39.412 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for contact
2015-05-05_12:49:39.412 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property contact
2015-05-05_12:49:39.413 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=email, insertable=true, updatable=true, unique=false}
2015-05-05_12:49:39.413 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2015-05-05_12:49:39.413 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for email
2015-05-05_12:49:39.413 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property email
2015-05-05_12:49:39.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=experience, insertable=true, updatable=true, unique=false}
2015-05-05_12:49:39.414 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property experience with lazy=false
2015-05-05_12:49:39.414 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for experience
2015-05-05_12:49:39.414 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property experience
2015-05-05_12:49:39.414 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=name, insertable=true, updatable=true, unique=false}
2015-05-05_12:49:39.414 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2015-05-05_12:49:39.414 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for name
2015-05-05_12:49:39.415 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property name
2015-05-05_12:49:39.417 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for idpersonalTrainers
2015-05-05_12:49:39.417 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for contact
2015-05-05_12:49:39.420 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for email
2015-05-05_12:49:39.420 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for experience
2015-05-05_12:49:39.421 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2015-05-05_12:49:39.421 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
2015-05-05_12:49:39.422 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_12:49:39.422 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_12:49:39.423 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing collection mappings
2015-05-05_12:49:39.423 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
2015-05-05_12:49:39.423 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing association property references
2015-05-05_12:49:39.423 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints
2015-05-05_12:49:39.432 [JavaFX Application Thread] WARN  o.h.s.j.c.i.ConnectionProviderInitiator - HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
2015-05-05_12:49:39.433 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2015-05-05_12:49:39.437 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20
2015-05-05_12:49:39.437 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000006: Autocommit mode: false
2015-05-05_12:49:39.438 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/sportclubsystem]
2015-05-05_12:49:39.438 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000046: Connection properties: {user=root, password=root}
2015-05-05_12:49:39.458 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Opening new JDBC connection
2015-05-05_12:49:39.693 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Created connection to: jdbc:mysql://localhost:3306/sportclubsystem, Isolation Level: 4
2015-05-05_12:49:39.693 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-05-05_12:49:39.694 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2015-05-05_12:49:39.694 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - JDBC version : 3.0
2015-05-05_12:49:39.707 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_12:49:39.715 [JavaFX Application Thread] INFO  o.h.e.j.internal.LobCreatorBuilder - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2015-05-05_12:49:39.726 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
2015-05-05_12:49:39.727 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
2015-05-05_12:49:39.727 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
2015-05-05_12:49:39.727 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
2015-05-05_12:49:39.727 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
2015-05-05_12:49:39.727 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
2015-05-05_12:49:39.727 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
2015-05-05_12:49:39.727 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
2015-05-05_12:49:39.728 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Connection release mode: auto
2015-05-05_12:49:39.731 [JavaFX Application Thread] INFO  o.h.e.t.i.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2015-05-05_12:49:39.734 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
2015-05-05_12:49:39.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
2015-05-05_12:49:39.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
2015-05-05_12:49:39.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
2015-05-05_12:49:39.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
2015-05-05_12:49:39.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2015-05-05_12:49:39.737 [JavaFX Application Thread] INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2015-05-05_12:49:39.737 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
2015-05-05_12:49:39.737 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
2015-05-05_12:49:39.737 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
2015-05-05_12:49:39.738 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query cache: disabled
2015-05-05_12:49:39.738 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2015-05-05_12:49:39.739 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2015-05-05_12:49:39.739 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
2015-05-05_12:49:39.739 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
2015-05-05_12:49:39.742 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Statistics: disabled
2015-05-05_12:49:39.742 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
2015-05-05_12:49:39.742 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
2015-05-05_12:49:39.742 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Named query checking : enabled
2015-05-05_12:49:39.742 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2015-05-05_12:49:39.742 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
2015-05-05_12:49:39.752 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2015-05-05_12:49:39.761 [JavaFX Application Thread] TRACE org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@5cc5b7b1
2015-05-05_12:49:39.762 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2015-05-05_12:49:39.763 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 7, sun.boot.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\sunrsasign.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\classes, user.country.format=GB, sun.desktop=windows, hibernate.c3p0.max_size=20, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_25-b18, hibernate.c3p0.min_size=5, user.name=Asus, user.language.format=en, idea.launcher.bin.path=D:\IntelliJ IDEA 14.1.2\bin, javafx.runtime.version=8.0.25-b18, hibernate.c3p0.timeout=300, user.language=tr, sun.boot.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\bin, java.version=1.8.0_25, user.timezone=Asia/Istanbul, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1254, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=TR, java.home=C:\Program Files (x86)\Java\jdk1.8.0_25\jre, java.vm.info=mixed mode, os.version=6.1, path.separator=;, java.vm.version=25.25-b02, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\Asus, java.specification.vendor=Oracle Corporation, java.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=com.intellij.rt.execution.application.AppMain com.taylan.core.MainApp, java.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\deploy.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\javaws.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfxswt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\management-agent.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\plugin.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\access-bridge-64.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\cldrdata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\dnsns.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jaccess.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jfxrt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\localedata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\nashorn.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunec.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunjce_provider.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunmscapi.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunpkcs11.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\zipfs.jar;C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;D:\IntelliJ IDEA 14.1.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7533, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, hibernate.c3p0.idle_test_period=3000, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, javafx.version=8.0.25, file.encoding=windows-1254, java.specification.version=1.8, hibernate.show_sql=true, hibernate.c3p0.max_statements=50}
2015-05-05_12:49:39.776 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
2015-05-05_12:49:39.865 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_12:49:39.865 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idpersonalTrainers from sportclubsystem.personaltrainers where idpersonalTrainers =?
2015-05-05_12:49:39.865 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Snapshot select: select personaltr_.idpersonalTrainers, personaltr_.contact as contact0_, personaltr_.email as email0_, personaltr_.experience as experience0_, personaltr_.name as name0_ from sportclubsystem.personaltrainers personaltr_ where personaltr_.idpersonalTrainers=?
2015-05-05_12:49:39.865 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert 0: insert into sportclubsystem.personaltrainers (contact, email, experience, name, idpersonalTrainers) values (?, ?, ?, ?, ?)
2015-05-05_12:49:39.865 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update 0: update sportclubsystem.personaltrainers set contact=?, email=?, experience=?, name=? where idpersonalTrainers=?
2015-05-05_12:49:39.869 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete 0: delete from sportclubsystem.personaltrainers where idpersonalTrainers=?
2015-05-05_12:49:39.869 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Identity insert: insert into sportclubsystem.personaltrainers (contact, email, experience, name) values (?, ?, ?, ?)
2015-05-05_12:49:39.885 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [NONE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_12:49:39.885 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_12:49:39.885 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_12:49:39.885 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE_NOWAIT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_12:49:39.886 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [FORCE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_12:49:39.886 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? lock in share mode
2015-05-05_12:49:39.886 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_WRITE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_12:49:39.886 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_12:49:39.887 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_12:49:39.887 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_12:49:39.894 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_12:49:39.894 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_12:49:40.041 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@53e1b737
2015-05-05_12:49:40.043 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: cd987af1-3350-4ffc-986c-e86eebff4933 (<unnamed>)
2015-05-05_12:49:40.047 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2015-05-05_12:49:40.047 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiated session factory
2015-05-05_12:49:40.048 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 1 named HQL queries
2015-05-05_12:49:40.048 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking named query: loadPersonalTrainers
2015-05-05_12:49:40.079 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_12:49:40.085 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'com'
                |  |  \-[IDENT] Node: 'taylan'
                |  \-[IDENT] Node: 'persistence'
                \-[IDENT] Node: 'Personaltrainers'

2015-05-05_12:49:40.085 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_12:49:40.104 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2015-05-05_12:49:40.117 [JavaFX Application Thread] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.taylan.persistence.DAO.Personaltrainers (<no alias>) -> personaltr0_
2015-05-05_12:49:40.118 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2015-05-05_12:49:40.118 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} sportclubsystem.personaltrainers personaltr0_ ) )
2015-05-05_12:49:40.122 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2015-05-05_12:49:40.126 [JavaFX Application Thread] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [sportclubsystem.personaltrainers personaltr0_]
2015-05-05_12:49:40.126 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2015-05-05_12:49:40.127 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (sportclubsystem.personaltrainers)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'personaltr0_.idpersonalTrainers as idperson1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}}
    |  \-[SQL_TOKEN] SqlFragment: 'personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[personaltr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'sportclubsystem.personaltrainers personaltr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}

2015-05-05_12:49:40.128 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_12:49:40.140 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_12:49:40.140 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_12:49:40.140 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_12:49:40.145 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 0 named SQL queries
2015-05-05_12:49:40.152 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2015-05-05_12:49:40.192 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_12:49:40.192 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_12:49:40.192 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_12:49:40.193 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_12:49:40.267 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_12:49:40.301 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_12:49:40.303 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_12:49:40.304 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_12:49:40.309 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_12:49:40.309 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_12:49:40.309 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_12:49:40.315 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_12:49:40.318 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_12:49:40.318 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_12:49:40.318 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_12:49:40.318 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_12:49:40.318 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_12:49:40.319 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_12:49:40.319 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_12:49:40.319 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_12:49:40.319 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_12:49:40.319 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_12:49:40.319 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_12:49:40.319 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_12:49:40.319 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_12:49:40.320 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_12:49:40.321 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_12:49:40.326 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_12:49:40.326 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_12:49:40.327 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_12:49:40.327 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_12:49:40.327 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_12:49:40.328 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_12:49:40.329 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_12:49:40.329 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_12:49:42.162 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_12:49:42.162 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_12:49:42.162 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_12:49:42.163 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_12:49:42.163 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_12:49:42.164 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_12:49:42.165 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_12:49:42.165 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_12:49:42.169 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_12:49:42.169 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_12:49:42.169 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_12:49:42.169 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_12:49:42.169 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_12:49:42.169 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_12:49:42.170 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_12:49:42.170 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_12:49:42.170 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_12:49:42.170 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_12:49:42.170 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_12:49:42.170 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_12:49:42.170 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_12:49:42.170 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_12:49:42.171 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_12:49:42.171 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_12:49:42.174 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_12:49:42.174 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_12:49:42.174 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_12:49:42.174 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_12:49:42.174 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_12:49:42.175 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_12:49:42.175 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_12:49:42.175 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_12:49:42.175 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_12:49:42.175 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_12:49:42.175 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_12:49:43.378 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_12:49:43.379 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_12:49:43.379 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_12:49:43.379 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_12:49:43.379 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_12:49:43.384 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_12:49:43.384 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_12:49:43.384 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_12:49:43.384 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_12:49:43.384 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_12:49:43.384 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_12:49:43.385 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_12:49:43.385 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_12:49:43.385 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_12:49:43.385 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_12:49:43.385 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_12:49:43.385 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_12:49:43.386 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_12:49:43.386 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_12:49:43.386 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_12:49:43.386 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_12:49:43.389 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_12:49:43.390 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_12:49:43.390 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_12:49:43.390 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_12:49:43.390 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_12:49:43.390 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_12:49:43.390 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_12:49:43.390 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_12:49:43.390 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_12:49:43.390 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_12:49:43.391 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_12:49:43.391 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_12:49:43.391 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_12:49:43.391 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_12:49:44.492 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_12:49:44.492 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_12:49:44.497 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_12:49:44.497 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_12:49:44.497 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_12:49:44.499 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_12:49:44.499 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_12:49:44.499 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_12:49:44.499 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_12:49:44.499 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_12:49:44.499 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_12:49:44.500 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_12:49:44.500 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_12:49:44.500 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_12:49:44.500 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_12:49:44.500 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_12:49:44.500 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_12:49:44.500 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_12:49:44.503 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_12:49:44.504 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_12:49:44.504 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_12:49:44.504 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_12:49:44.504 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_12:49:44.504 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_12:49:44.504 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_12:49:44.504 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_12:49:44.505 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_12:49:44.505 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_12:49:44.505 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_12:49:44.505 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_12:49:44.505 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_12:49:44.505 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_12:49:44.505 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_12:49:44.506 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_12:49:44.508 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_13:11:47.381 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@42558f83
2015-05-05_13:11:47.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@42558f83
2015-05-05_13:11:47.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@42558f83
2015-05-05_13:11:47.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@20bbbae3
2015-05-05_13:11:47.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4204682
2015-05-05_13:11:47.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@49a6853c
2015-05-05_13:11:47.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@20df720b
2015-05-05_13:11:47.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@20df720b
2015-05-05_13:11:47.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20df720b
2015-05-05_13:11:47.393 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@40482295
2015-05-05_13:11:47.393 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@40482295
2015-05-05_13:11:47.393 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40482295
2015-05-05_13:11:47.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4d2a2470
2015-05-05_13:11:47.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4d2a2470
2015-05-05_13:11:47.396 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d2a2470
2015-05-05_13:11:47.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@53de228f
2015-05-05_13:11:47.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@53de228f
2015-05-05_13:11:47.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@53de228f
2015-05-05_13:11:47.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3e56c940
2015-05-05_13:11:47.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3e56c940
2015-05-05_13:11:47.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e56c940
2015-05-05_13:11:47.406 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@45991c1f
2015-05-05_13:11:47.406 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@45991c1f
2015-05-05_13:11:47.406 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@45991c1f
2015-05-05_13:11:47.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3ea2302b
2015-05-05_13:11:47.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3ea2302b
2015-05-05_13:11:47.409 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3ea2302b
2015-05-05_13:11:47.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@598540e1
2015-05-05_13:11:47.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@598540e1
2015-05-05_13:11:47.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17ddf2cb
2015-05-05_13:11:47.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17ddf2cb
2015-05-05_13:11:47.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2150e78
2015-05-05_13:11:47.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2150e78
2015-05-05_13:11:47.420 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3715264
2015-05-05_13:11:47.420 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3715264
2015-05-05_13:11:47.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7f1ace79
2015-05-05_13:11:47.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f1ace79
2015-05-05_13:11:47.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4f1e9658
2015-05-05_13:11:47.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4f1e9658
2015-05-05_13:11:47.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@59ede09e
2015-05-05_13:11:47.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@59ede09e
2015-05-05_13:11:47.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@59ede09e
2015-05-05_13:11:47.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2caefa22
2015-05-05_13:11:47.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5c703d2a
2015-05-05_13:11:47.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5c703d2a
2015-05-05_13:11:47.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5c703d2a
2015-05-05_13:11:47.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@25addb31
2015-05-05_13:11:47.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4af6849a
2015-05-05_13:11:47.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4af6849a
2015-05-05_13:11:47.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2b0cf828
2015-05-05_13:11:47.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2b0cf828
2015-05-05_13:11:47.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4abac216
2015-05-05_13:11:47.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4abac216
2015-05-05_13:11:47.491 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7911c225
2015-05-05_13:11:47.493 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7911c225
2015-05-05_13:11:47.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3b249299
2015-05-05_13:11:47.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3b249299
2015-05-05_13:11:47.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@57681de
2015-05-05_13:11:47.497 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@23c78b72
2015-05-05_13:11:47.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2fb3ec98
2015-05-05_13:11:47.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2fb3ec98
2015-05-05_13:11:47.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2fb3ec98
2015-05-05_13:11:47.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@164ead4d
2015-05-05_13:11:47.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@164ead4d
2015-05-05_13:11:47.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@164ead4d
2015-05-05_13:11:47.507 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2508f914
2015-05-05_13:11:47.509 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@c055835
2015-05-05_13:11:47.509 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@c055835
2015-05-05_13:11:47.509 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@c055835
2015-05-05_13:11:47.511 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7cc8c5c8
2015-05-05_13:11:47.512 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7cc8c5c8
2015-05-05_13:11:47.512 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7cc8c5c8
2015-05-05_13:11:47.513 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2c9bcafb
2015-05-05_13:11:47.522 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4450141e
2015-05-05_13:11:47.522 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4450141e
2015-05-05_13:11:47.523 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64f8dd8b
2015-05-05_13:11:47.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3d0aeb73
2015-05-05_13:11:47.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d0aeb73
2015-05-05_13:11:47.529 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6674a51
2015-05-05_13:11:47.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1379c3c9
2015-05-05_13:11:47.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7426fc85
2015-05-05_13:11:47.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7426fc85
2015-05-05_13:11:47.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7059f4a9
2015-05-05_13:11:47.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@60448fb8
2015-05-05_13:11:47.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1ae6e333
2015-05-05_13:11:47.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6eee6000
2015-05-05_13:11:47.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@512d3dc8
2015-05-05_13:11:47.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15d0511a
2015-05-05_13:11:47.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3882d7e8
2015-05-05_13:11:47.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25f14e98
2015-05-05_13:11:47.561 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-05_13:11:47.569 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-05_13:11:47.572 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-05_13:11:47.574 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-05_13:11:47.588 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-05_13:11:47.589 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-05_13:11:47.590 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_13:11:47.593 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_13:11:47.595 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-05_13:11:47.596 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-05_13:11:47.599 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-05_13:11:47.599 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-05_13:11:47.601 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-05_13:11:47.602 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-05_13:11:47.603 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-05_13:11:47.604 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-05_13:11:47.604 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-05_13:11:47.605 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-05_13:11:47.606 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-05_13:11:47.610 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-05_13:11:47.610 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-05_13:11:47.643 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-05_13:11:47.643 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-05_13:11:47.646 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-05_13:11:47.647 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-05_13:11:47.669 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.driver_class=com.mysql.jdbc.Driver
2015-05-05_13:11:47.669 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.password=root
2015-05-05_13:11:47.669 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem
2015-05-05_13:11:47.669 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.username=root
2015-05-05_13:11:47.669 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_13:11:47.669 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - show_sql=true
2015-05-05_13:11:47.669 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.min_size=5
2015-05-05_13:11:47.670 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_size=20
2015-05-05_13:11:47.670 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.timeout=300
2015-05-05_13:11:47.670 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_statements=50
2015-05-05_13:11:47.670 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.idle_test_period=3000
2015-05-05_13:11:47.670 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Session-factory config [null] named class [com.taylan.persistence.DAO.Personaltrainers] for mapping
2015-05-05_13:11:47.699 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000041: Configured SessionFactory: null
2015-05-05_13:11:47.699 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Properties: {javafx.version=8.0.25, hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\bin, java.vm.version=25.25-b02, hibernate.connection.username=root, user.country.format=GB, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=TR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, java.runtime.version=1.8.0_25-b18, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javafx.runtime.version=8.0.25-b18, hibernate.c3p0.max_statements=50, java.endorsed.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1254, hibernate.c3p0.timeout=300, java.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.1, user.home=C:\Users\Asus, user.timezone=Asia/Istanbul, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=windows-1254, java.specification.version=1.8, hibernate.c3p0.min_size=5, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, java.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\deploy.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\javaws.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfxswt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\management-agent.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\plugin.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\access-bridge-64.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\cldrdata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\dnsns.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jaccess.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jfxrt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\localedata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\nashorn.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunec.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunjce_provider.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunmscapi.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunpkcs11.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\zipfs.jar;C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;D:\IntelliJ IDEA 14.1.2\lib\idea_rt.jar, user.name=Asus, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.java.command=com.taylan.core.MainApp, java.home=C:\Program Files (x86)\Java\jdk1.8.0_25\jre, sun.arch.data.model=64, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, user.language=tr, java.specification.vendor=Oracle Corporation, user.language.format=en, hibernate.c3p0.max_size=20, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_25, java.ext.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\sunrsasign.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-05-05_13:11:47.718 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2015-05-05_13:11:47.747 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
2015-05-05_13:11:47.787 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files
2015-05-05_13:11:47.787 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Process annotated classes
2015-05-05_13:11:47.794 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_13:11:47.824 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.QueryBinder - Binding named query: loadPersonalTrainers => from Personaltrainers
2015-05-05_13:11:47.837 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2015-05-05_13:11:47.840 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2015-05-05_13:11:47.850 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Import with entity name Personaltrainers
2015-05-05_13:11:47.854 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Bind entity com.taylan.persistence.DAO.Personaltrainers on table personaltrainers
2015-05-05_13:11:47.888 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=idpersonalTrainers, insertable=true, updatable=true, unique=true}
2015-05-05_13:11:47.897 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property idpersonalTrainers with lazy=false
2015-05-05_13:11:47.901 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for idpersonalTrainers
2015-05-05_13:11:47.904 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property idpersonalTrainers
2015-05-05_13:11:47.909 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=contact, insertable=true, updatable=true, unique=false}
2015-05-05_13:11:47.909 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property contact with lazy=false
2015-05-05_13:11:47.913 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for contact
2015-05-05_13:11:47.913 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property contact
2015-05-05_13:11:47.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=email, insertable=true, updatable=true, unique=false}
2015-05-05_13:11:47.914 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2015-05-05_13:11:47.914 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for email
2015-05-05_13:11:47.914 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property email
2015-05-05_13:11:47.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=experience, insertable=true, updatable=true, unique=false}
2015-05-05_13:11:47.914 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property experience with lazy=false
2015-05-05_13:11:47.914 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for experience
2015-05-05_13:11:47.915 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property experience
2015-05-05_13:11:47.915 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=name, insertable=true, updatable=true, unique=false}
2015-05-05_13:11:47.915 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2015-05-05_13:11:47.915 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for name
2015-05-05_13:11:47.915 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property name
2015-05-05_13:11:47.918 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for idpersonalTrainers
2015-05-05_13:11:47.918 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for contact
2015-05-05_13:11:47.922 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for email
2015-05-05_13:11:47.922 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for experience
2015-05-05_13:11:47.922 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2015-05-05_13:11:47.923 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
2015-05-05_13:11:47.925 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_13:11:47.925 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_13:11:47.925 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing collection mappings
2015-05-05_13:11:47.925 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
2015-05-05_13:11:47.925 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing association property references
2015-05-05_13:11:47.926 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints
2015-05-05_13:11:47.938 [JavaFX Application Thread] WARN  o.h.s.j.c.i.ConnectionProviderInitiator - HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
2015-05-05_13:11:47.940 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2015-05-05_13:11:47.944 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20
2015-05-05_13:11:47.944 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000006: Autocommit mode: false
2015-05-05_13:11:47.944 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/sportclubsystem]
2015-05-05_13:11:47.944 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000046: Connection properties: {user=root, password=root}
2015-05-05_13:11:47.966 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Opening new JDBC connection
2015-05-05_13:11:48.223 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Created connection to: jdbc:mysql://localhost:3306/sportclubsystem, Isolation Level: 4
2015-05-05_13:11:48.224 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-05-05_13:11:48.224 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2015-05-05_13:11:48.224 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - JDBC version : 3.0
2015-05-05_13:11:48.240 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_13:11:48.251 [JavaFX Application Thread] INFO  o.h.e.j.internal.LobCreatorBuilder - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2015-05-05_13:11:48.267 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
2015-05-05_13:11:48.267 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
2015-05-05_13:11:48.267 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
2015-05-05_13:11:48.267 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
2015-05-05_13:11:48.267 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
2015-05-05_13:11:48.267 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
2015-05-05_13:11:48.268 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
2015-05-05_13:11:48.268 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
2015-05-05_13:11:48.268 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Connection release mode: auto
2015-05-05_13:11:48.272 [JavaFX Application Thread] INFO  o.h.e.t.i.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2015-05-05_13:11:48.276 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
2015-05-05_13:11:48.276 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
2015-05-05_13:11:48.276 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
2015-05-05_13:11:48.276 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
2015-05-05_13:11:48.276 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
2015-05-05_13:11:48.277 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2015-05-05_13:11:48.279 [JavaFX Application Thread] INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2015-05-05_13:11:48.279 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
2015-05-05_13:11:48.280 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
2015-05-05_13:11:48.280 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
2015-05-05_13:11:48.280 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query cache: disabled
2015-05-05_13:11:48.280 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2015-05-05_13:11:48.281 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2015-05-05_13:11:48.281 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
2015-05-05_13:11:48.281 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
2015-05-05_13:11:48.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Statistics: disabled
2015-05-05_13:11:48.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
2015-05-05_13:11:48.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
2015-05-05_13:11:48.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Named query checking : enabled
2015-05-05_13:11:48.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2015-05-05_13:11:48.286 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
2015-05-05_13:11:48.297 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2015-05-05_13:11:48.308 [JavaFX Application Thread] TRACE org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@6dcb9aa4
2015-05-05_13:11:48.309 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2015-05-05_13:11:48.310 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiating session factory with properties: {javafx.version=8.0.25, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=root, sun.boot.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\bin, java.vm.version=25.25-b02, hibernate.connection.username=root, user.country.format=GB, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=TR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, java.runtime.version=1.8.0_25-b18, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javafx.runtime.version=8.0.25-b18, java.endorsed.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\endorsed, os.arch=amd64, hibernate.c3p0.max_statements=50, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1254, hibernate.c3p0.timeout=300, java.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.1, user.home=C:\Users\Asus, user.timezone=Asia/Istanbul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=windows-1254, hibernate.c3p0.min_size=5, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Asus, java.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\deploy.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\javaws.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfxswt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\management-agent.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\plugin.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\access-bridge-64.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\cldrdata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\dnsns.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jaccess.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jfxrt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\localedata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\nashorn.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunec.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunjce_provider.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunmscapi.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunpkcs11.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\zipfs.jar;C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;D:\IntelliJ IDEA 14.1.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files (x86)\Java\jdk1.8.0_25\jre, sun.java.command=com.taylan.core.MainApp, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=tr, user.language.format=en, awt.toolkit=sun.awt.windows.WToolkit, hibernate.c3p0.max_size=20, java.vm.info=mixed mode, java.version=1.8.0_25, java.ext.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\sunrsasign.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-05-05_13:11:48.324 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
2015-05-05_13:11:48.443 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_13:11:48.443 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idpersonalTrainers from sportclubsystem.personaltrainers where idpersonalTrainers =?
2015-05-05_13:11:48.443 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Snapshot select: select personaltr_.idpersonalTrainers, personaltr_.contact as contact0_, personaltr_.email as email0_, personaltr_.experience as experience0_, personaltr_.name as name0_ from sportclubsystem.personaltrainers personaltr_ where personaltr_.idpersonalTrainers=?
2015-05-05_13:11:48.443 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert 0: insert into sportclubsystem.personaltrainers (contact, email, experience, name, idpersonalTrainers) values (?, ?, ?, ?, ?)
2015-05-05_13:11:48.443 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update 0: update sportclubsystem.personaltrainers set contact=?, email=?, experience=?, name=? where idpersonalTrainers=?
2015-05-05_13:11:48.447 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete 0: delete from sportclubsystem.personaltrainers where idpersonalTrainers=?
2015-05-05_13:11:48.447 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Identity insert: insert into sportclubsystem.personaltrainers (contact, email, experience, name) values (?, ?, ?, ?)
2015-05-05_13:11:48.468 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [NONE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:11:48.469 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:11:48.469 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:11:48.469 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE_NOWAIT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:11:48.470 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [FORCE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:11:48.470 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? lock in share mode
2015-05-05_13:11:48.470 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_WRITE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:11:48.470 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:11:48.471 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:11:48.471 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:11:48.478 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:11:48.479 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:11:48.615 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@512b3fac
2015-05-05_13:11:48.618 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 4b864718-c310-4192-b70f-8ca8358ae2c4 (<unnamed>)
2015-05-05_13:11:48.622 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2015-05-05_13:11:48.623 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiated session factory
2015-05-05_13:11:48.624 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 1 named HQL queries
2015-05-05_13:11:48.624 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking named query: loadPersonalTrainers
2015-05-05_13:11:48.666 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_13:11:48.674 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'com'
                |  |  |  \-[IDENT] Node: 'taylan'
                |  |  \-[IDENT] Node: 'persistence'
                |  \-[IDENT] Node: 'DAO'
                \-[IDENT] Node: 'Personaltrainers'

2015-05-05_13:11:48.674 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_13:11:48.699 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2015-05-05_13:11:48.720 [JavaFX Application Thread] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.taylan.persistence.DAO.Personaltrainers (<no alias>) -> personaltr0_
2015-05-05_13:11:48.721 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2015-05-05_13:11:48.721 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} sportclubsystem.personaltrainers personaltr0_ ) )
2015-05-05_13:11:48.726 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2015-05-05_13:11:48.732 [JavaFX Application Thread] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [sportclubsystem.personaltrainers personaltr0_]
2015-05-05_13:11:48.732 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2015-05-05_13:11:48.733 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (sportclubsystem.personaltrainers)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'personaltr0_.idpersonalTrainers as idperson1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}}
    |  \-[SQL_TOKEN] SqlFragment: 'personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[personaltr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'sportclubsystem.personaltrainers personaltr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}

2015-05-05_13:11:48.733 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_13:11:48.745 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_13:11:48.745 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_13:11:48.746 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_13:11:48.751 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 0 named SQL queries
2015-05-05_13:11:48.759 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2015-05-05_13:11:48.809 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_13:11:48.809 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_13:11:48.809 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_13:11:48.809 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_13:11:48.901 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_13:11:48.938 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_13:11:48.940 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_13:11:48.942 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:11:48.948 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_13:11:48.949 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_13:11:48.949 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_13:11:48.952 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_13:11:48.954 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_13:11:48.954 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_13:11:48.954 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:11:48.954 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_13:11:48.954 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_13:11:48.955 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_13:11:48.955 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_13:11:48.955 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_13:11:48.955 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_13:11:48.955 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:11:48.955 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_13:11:48.955 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_13:11:48.955 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_13:11:48.955 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_13:11:48.957 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:11:48.963 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:11:48.963 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:11:48.963 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:11:48.963 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:11:48.963 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:11:48.964 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_13:11:48.965 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_13:11:48.965 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_13:11:51.452 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_13:11:51.452 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_13:11:51.452 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_13:11:51.452 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_13:11:51.452 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_13:11:51.453 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_13:11:51.454 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_13:11:51.454 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:11:51.458 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_13:11:51.458 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_13:11:51.459 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_13:11:51.459 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_13:11:51.459 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_13:11:51.459 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_13:11:51.459 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:11:51.459 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_13:11:51.459 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_13:11:51.460 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_13:11:51.460 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_13:11:51.460 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_13:11:51.460 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_13:11:51.460 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:11:51.460 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_13:11:51.461 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_13:11:51.464 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_13:11:51.464 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_13:11:51.464 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:11:51.464 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:11:51.465 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:11:51.465 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:11:51.465 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:11:51.465 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:11:51.465 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_13:11:51.465 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_13:11:51.465 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_13:11:53.034 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_13:11:53.034 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_13:11:53.034 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_13:11:53.035 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_13:11:53.035 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_13:11:53.039 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_13:11:53.040 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_13:11:53.040 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:11:53.040 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_13:11:53.040 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_13:11:53.040 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_13:11:53.040 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_13:11:53.040 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_13:11:53.040 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_13:11:53.040 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:11:53.041 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_13:11:53.041 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_13:11:53.041 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_13:11:53.041 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_13:11:53.041 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_13:11:53.041 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_13:11:53.045 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:11:53.045 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_13:11:53.045 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_13:11:53.045 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_13:11:53.045 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_13:11:53.045 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:11:53.046 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:11:53.046 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:11:53.046 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:11:53.046 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:11:53.046 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:11:53.046 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_13:11:53.046 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_13:11:53.046 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_13:21:38.876 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@45f67636
2015-05-05_13:21:38.880 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@45f67636
2015-05-05_13:21:38.881 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@45f67636
2015-05-05_13:21:38.882 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@59ec8a7d
2015-05-05_13:21:38.883 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1e398def
2015-05-05_13:21:38.884 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4e60469c
2015-05-05_13:21:38.886 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@743b5e56
2015-05-05_13:21:38.886 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@743b5e56
2015-05-05_13:21:38.886 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@743b5e56
2015-05-05_13:21:38.888 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3ce14772
2015-05-05_13:21:38.888 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3ce14772
2015-05-05_13:21:38.888 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3ce14772
2015-05-05_13:21:38.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3ad889ff
2015-05-05_13:21:38.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3ad889ff
2015-05-05_13:21:38.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ad889ff
2015-05-05_13:21:38.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4fc0dc8f
2015-05-05_13:21:38.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4fc0dc8f
2015-05-05_13:21:38.896 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4fc0dc8f
2015-05-05_13:21:38.898 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@32892471
2015-05-05_13:21:38.898 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@32892471
2015-05-05_13:21:38.898 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@32892471
2015-05-05_13:21:38.900 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2f9b9113
2015-05-05_13:21:38.900 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2f9b9113
2015-05-05_13:21:38.900 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2f9b9113
2015-05-05_13:21:38.902 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6ef9a375
2015-05-05_13:21:38.902 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6ef9a375
2015-05-05_13:21:38.902 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ef9a375
2015-05-05_13:21:38.904 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@12309ee2
2015-05-05_13:21:38.905 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@12309ee2
2015-05-05_13:21:38.906 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@25369eb6
2015-05-05_13:21:38.906 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@25369eb6
2015-05-05_13:21:38.907 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@74d6e476
2015-05-05_13:21:38.908 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@74d6e476
2015-05-05_13:21:38.915 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7a6f078f
2015-05-05_13:21:38.915 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a6f078f
2015-05-05_13:21:38.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7d5ad86f
2015-05-05_13:21:38.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7d5ad86f
2015-05-05_13:21:38.961 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@313e0c6
2015-05-05_13:21:38.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@313e0c6
2015-05-05_13:21:38.964 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@770928d8
2015-05-05_13:21:38.964 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@770928d8
2015-05-05_13:21:38.964 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@770928d8
2015-05-05_13:21:38.965 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@240aa521
2015-05-05_13:21:38.967 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@610ba32
2015-05-05_13:21:38.967 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@610ba32
2015-05-05_13:21:38.967 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@610ba32
2015-05-05_13:21:38.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7bba6c39
2015-05-05_13:21:38.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4faa98e0
2015-05-05_13:21:38.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4faa98e0
2015-05-05_13:21:38.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@721a55af
2015-05-05_13:21:38.976 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@721a55af
2015-05-05_13:21:38.978 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@39afaff6
2015-05-05_13:21:38.978 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@39afaff6
2015-05-05_13:21:38.979 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1dce1ebe
2015-05-05_13:21:38.979 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1dce1ebe
2015-05-05_13:21:38.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a0045ec
2015-05-05_13:21:38.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a0045ec
2015-05-05_13:21:38.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d3ba53b
2015-05-05_13:21:38.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7cd33990
2015-05-05_13:21:38.984 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1f1b3c6d
2015-05-05_13:21:38.985 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1f1b3c6d
2015-05-05_13:21:38.985 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1f1b3c6d
2015-05-05_13:21:38.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@24285ed7
2015-05-05_13:21:38.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@24285ed7
2015-05-05_13:21:38.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@24285ed7
2015-05-05_13:21:38.991 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@63e8b316
2015-05-05_13:21:38.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1e602a2d
2015-05-05_13:21:38.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e602a2d
2015-05-05_13:21:38.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1e602a2d
2015-05-05_13:21:38.994 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5bba596c
2015-05-05_13:21:38.994 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5bba596c
2015-05-05_13:21:38.994 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5bba596c
2015-05-05_13:21:38.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6436a008
2015-05-05_13:21:39.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3717f807
2015-05-05_13:21:39.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3717f807
2015-05-05_13:21:39.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@32dc521a
2015-05-05_13:21:39.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@22765a97
2015-05-05_13:21:39.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@22765a97
2015-05-05_13:21:39.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@444ffee
2015-05-05_13:21:39.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@65bf70fe
2015-05-05_13:21:39.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7527e67f
2015-05-05_13:21:39.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7527e67f
2015-05-05_13:21:39.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1e6f5882
2015-05-05_13:21:39.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@54b1412e
2015-05-05_13:21:39.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2402a9e9
2015-05-05_13:21:39.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d1aad05
2015-05-05_13:21:39.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@79554d6c
2015-05-05_13:21:39.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2733db59
2015-05-05_13:21:39.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@164f73b7
2015-05-05_13:21:39.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5ef586fe
2015-05-05_13:21:39.035 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-05_13:21:39.041 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-05_13:21:39.043 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-05_13:21:39.044 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-05_13:21:39.055 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-05_13:21:39.055 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-05_13:21:39.056 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_13:21:39.060 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_13:21:39.061 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-05_13:21:39.061 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-05_13:21:39.063 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-05_13:21:39.064 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-05_13:21:39.064 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-05_13:21:39.065 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-05_13:21:39.065 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-05_13:21:39.066 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-05_13:21:39.066 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-05_13:21:39.067 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-05_13:21:39.068 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-05_13:21:39.070 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-05_13:21:39.070 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-05_13:21:39.092 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-05_13:21:39.092 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-05_13:21:39.096 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-05_13:21:39.097 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-05_13:21:39.115 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.driver_class=com.mysql.jdbc.Driver
2015-05-05_13:21:39.116 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.password=root
2015-05-05_13:21:39.116 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem
2015-05-05_13:21:39.116 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.username=root
2015-05-05_13:21:39.116 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_13:21:39.116 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - show_sql=true
2015-05-05_13:21:39.116 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.min_size=5
2015-05-05_13:21:39.116 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_size=20
2015-05-05_13:21:39.116 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.timeout=300
2015-05-05_13:21:39.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_statements=50
2015-05-05_13:21:39.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.idle_test_period=3000
2015-05-05_13:21:39.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Session-factory config [null] named class [com.taylan.persistence.DAO.Personaltrainers] for mapping
2015-05-05_13:21:39.138 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000041: Configured SessionFactory: null
2015-05-05_13:21:39.139 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 7, sun.boot.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\sunrsasign.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\classes, user.country.format=GB, sun.desktop=windows, hibernate.c3p0.max_size=20, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_25-b18, hibernate.c3p0.min_size=5, user.name=Asus, user.language.format=en, idea.launcher.bin.path=D:\IntelliJ IDEA 14.1.2\bin, javafx.runtime.version=8.0.25-b18, hibernate.c3p0.timeout=300, user.language=tr, sun.boot.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\bin, java.version=1.8.0_25, user.timezone=Asia/Istanbul, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1254, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=TR, java.home=C:\Program Files (x86)\Java\jdk1.8.0_25\jre, java.vm.info=mixed mode, os.version=6.1, path.separator=;, java.vm.version=25.25-b02, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\Asus, java.specification.vendor=Oracle Corporation, java.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=com.intellij.rt.execution.application.AppMain com.taylan.core.MainApp, java.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\deploy.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\javaws.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfxswt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\management-agent.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\plugin.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\access-bridge-64.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\cldrdata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\dnsns.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jaccess.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jfxrt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\localedata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\nashorn.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunec.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunjce_provider.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunmscapi.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunpkcs11.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\zipfs.jar;C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;D:\IntelliJ IDEA 14.1.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7532, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, hibernate.c3p0.idle_test_period=3000, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, javafx.version=8.0.25, file.encoding=windows-1254, java.specification.version=1.8, hibernate.c3p0.max_statements=50, hibernate.show_sql=true}
2015-05-05_13:21:39.154 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2015-05-05_13:21:39.175 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
2015-05-05_13:21:39.205 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files
2015-05-05_13:21:39.205 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Process annotated classes
2015-05-05_13:21:39.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_13:21:39.226 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.QueryBinder - Binding named query: loadPersonalTrainers => from Personaltrainers
2015-05-05_13:21:39.235 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2015-05-05_13:21:39.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2015-05-05_13:21:39.244 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Import with entity name Personaltrainers
2015-05-05_13:21:39.248 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Bind entity com.taylan.persistence.DAO.Personaltrainers on table personaltrainers
2015-05-05_13:21:39.279 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=idpersonalTrainers, insertable=true, updatable=true, unique=true}
2015-05-05_13:21:39.286 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property idpersonalTrainers with lazy=false
2015-05-05_13:21:39.289 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for idpersonalTrainers
2015-05-05_13:21:39.291 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property idpersonalTrainers
2015-05-05_13:21:39.294 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=contact, insertable=true, updatable=true, unique=false}
2015-05-05_13:21:39.295 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property contact with lazy=false
2015-05-05_13:21:39.298 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for contact
2015-05-05_13:21:39.298 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property contact
2015-05-05_13:21:39.299 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=email, insertable=true, updatable=true, unique=false}
2015-05-05_13:21:39.299 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2015-05-05_13:21:39.299 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for email
2015-05-05_13:21:39.299 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property email
2015-05-05_13:21:39.300 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=experience, insertable=true, updatable=true, unique=false}
2015-05-05_13:21:39.300 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property experience with lazy=false
2015-05-05_13:21:39.300 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for experience
2015-05-05_13:21:39.300 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property experience
2015-05-05_13:21:39.301 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=name, insertable=true, updatable=true, unique=false}
2015-05-05_13:21:39.301 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2015-05-05_13:21:39.301 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for name
2015-05-05_13:21:39.301 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property name
2015-05-05_13:21:39.304 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for idpersonalTrainers
2015-05-05_13:21:39.304 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for contact
2015-05-05_13:21:39.308 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for email
2015-05-05_13:21:39.308 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for experience
2015-05-05_13:21:39.308 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2015-05-05_13:21:39.309 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
2015-05-05_13:21:39.310 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_13:21:39.310 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_13:21:39.310 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing collection mappings
2015-05-05_13:21:39.310 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
2015-05-05_13:21:39.310 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing association property references
2015-05-05_13:21:39.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints
2015-05-05_13:21:39.321 [JavaFX Application Thread] WARN  o.h.s.j.c.i.ConnectionProviderInitiator - HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
2015-05-05_13:21:39.323 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2015-05-05_13:21:39.327 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20
2015-05-05_13:21:39.328 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000006: Autocommit mode: false
2015-05-05_13:21:39.328 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/sportclubsystem]
2015-05-05_13:21:39.328 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000046: Connection properties: {user=root, password=root}
2015-05-05_13:21:39.346 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Opening new JDBC connection
2015-05-05_13:21:39.572 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Created connection to: jdbc:mysql://localhost:3306/sportclubsystem, Isolation Level: 4
2015-05-05_13:21:39.573 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-05-05_13:21:39.573 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2015-05-05_13:21:39.573 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - JDBC version : 3.0
2015-05-05_13:21:39.589 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_13:21:39.596 [JavaFX Application Thread] INFO  o.h.e.j.internal.LobCreatorBuilder - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2015-05-05_13:21:39.609 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
2015-05-05_13:21:39.609 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
2015-05-05_13:21:39.609 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
2015-05-05_13:21:39.609 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
2015-05-05_13:21:39.610 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
2015-05-05_13:21:39.610 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
2015-05-05_13:21:39.610 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
2015-05-05_13:21:39.610 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
2015-05-05_13:21:39.610 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Connection release mode: auto
2015-05-05_13:21:39.616 [JavaFX Application Thread] INFO  o.h.e.t.i.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2015-05-05_13:21:39.620 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
2015-05-05_13:21:39.620 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
2015-05-05_13:21:39.620 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
2015-05-05_13:21:39.620 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
2015-05-05_13:21:39.621 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
2015-05-05_13:21:39.621 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2015-05-05_13:21:39.623 [JavaFX Application Thread] INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2015-05-05_13:21:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
2015-05-05_13:21:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
2015-05-05_13:21:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
2015-05-05_13:21:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query cache: disabled
2015-05-05_13:21:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2015-05-05_13:21:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2015-05-05_13:21:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
2015-05-05_13:21:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
2015-05-05_13:21:39.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Statistics: disabled
2015-05-05_13:21:39.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
2015-05-05_13:21:39.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
2015-05-05_13:21:39.629 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Named query checking : enabled
2015-05-05_13:21:39.630 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2015-05-05_13:21:39.630 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
2015-05-05_13:21:39.639 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2015-05-05_13:21:39.648 [JavaFX Application Thread] TRACE org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@526b0d1f
2015-05-05_13:21:39.649 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2015-05-05_13:21:39.650 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 7, sun.boot.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\sunrsasign.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\classes, user.country.format=GB, sun.desktop=windows, hibernate.c3p0.max_size=20, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_25-b18, hibernate.c3p0.min_size=5, user.name=Asus, user.language.format=en, idea.launcher.bin.path=D:\IntelliJ IDEA 14.1.2\bin, javafx.runtime.version=8.0.25-b18, hibernate.c3p0.timeout=300, user.language=tr, sun.boot.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\bin, java.version=1.8.0_25, user.timezone=Asia/Istanbul, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1254, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=TR, java.home=C:\Program Files (x86)\Java\jdk1.8.0_25\jre, java.vm.info=mixed mode, os.version=6.1, path.separator=;, java.vm.version=25.25-b02, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\Asus, java.specification.vendor=Oracle Corporation, java.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=com.intellij.rt.execution.application.AppMain com.taylan.core.MainApp, java.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\deploy.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\javaws.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfxswt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\management-agent.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\plugin.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\access-bridge-64.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\cldrdata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\dnsns.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jaccess.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jfxrt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\localedata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\nashorn.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunec.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunjce_provider.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunmscapi.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunpkcs11.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\zipfs.jar;C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;D:\IntelliJ IDEA 14.1.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7532, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, hibernate.c3p0.idle_test_period=3000, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, javafx.version=8.0.25, file.encoding=windows-1254, java.specification.version=1.8, hibernate.show_sql=true, hibernate.c3p0.max_statements=50}
2015-05-05_13:21:39.666 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
2015-05-05_13:21:39.766 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_13:21:39.767 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idpersonalTrainers from sportclubsystem.personaltrainers where idpersonalTrainers =?
2015-05-05_13:21:39.767 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Snapshot select: select personaltr_.idpersonalTrainers, personaltr_.contact as contact0_, personaltr_.email as email0_, personaltr_.experience as experience0_, personaltr_.name as name0_ from sportclubsystem.personaltrainers personaltr_ where personaltr_.idpersonalTrainers=?
2015-05-05_13:21:39.767 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert 0: insert into sportclubsystem.personaltrainers (contact, email, experience, name, idpersonalTrainers) values (?, ?, ?, ?, ?)
2015-05-05_13:21:39.767 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update 0: update sportclubsystem.personaltrainers set contact=?, email=?, experience=?, name=? where idpersonalTrainers=?
2015-05-05_13:21:39.771 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete 0: delete from sportclubsystem.personaltrainers where idpersonalTrainers=?
2015-05-05_13:21:39.771 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Identity insert: insert into sportclubsystem.personaltrainers (contact, email, experience, name) values (?, ?, ?, ?)
2015-05-05_13:21:39.790 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [NONE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:21:39.790 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:21:39.790 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:21:39.791 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE_NOWAIT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:21:39.791 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [FORCE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:21:39.791 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? lock in share mode
2015-05-05_13:21:39.791 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_WRITE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:21:39.791 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:21:39.792 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:21:39.792 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:21:39.799 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:21:39.799 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:21:39.936 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@600faf2
2015-05-05_13:21:39.938 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 0276542c-a829-4eea-984b-4a68373a0f58 (<unnamed>)
2015-05-05_13:21:39.942 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2015-05-05_13:21:39.942 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiated session factory
2015-05-05_13:21:39.943 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 1 named HQL queries
2015-05-05_13:21:39.943 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking named query: loadPersonalTrainers
2015-05-05_13:21:39.973 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_13:21:39.979 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'com'
                |  |  |  \-[IDENT] Node: 'taylan'
                |  |  \-[IDENT] Node: 'persistence'
                |  \-[IDENT] Node: 'DAO'
                \-[IDENT] Node: 'Personaltrainers'

2015-05-05_13:21:39.979 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_13:21:39.999 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2015-05-05_13:21:40.014 [JavaFX Application Thread] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.taylan.persistence.DAO.Personaltrainers (<no alias>) -> personaltr0_
2015-05-05_13:21:40.014 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2015-05-05_13:21:40.015 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} sportclubsystem.personaltrainers personaltr0_ ) )
2015-05-05_13:21:40.020 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2015-05-05_13:21:40.027 [JavaFX Application Thread] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [sportclubsystem.personaltrainers personaltr0_]
2015-05-05_13:21:40.027 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2015-05-05_13:21:40.029 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (sportclubsystem.personaltrainers)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'personaltr0_.idpersonalTrainers as idperson1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}}
    |  \-[SQL_TOKEN] SqlFragment: 'personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[personaltr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'sportclubsystem.personaltrainers personaltr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}

2015-05-05_13:21:40.029 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_13:21:40.040 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_13:21:40.040 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_13:21:40.040 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_13:21:40.046 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 0 named SQL queries
2015-05-05_13:21:40.052 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2015-05-05_13:21:40.093 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_13:21:40.093 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_13:21:40.093 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_13:21:40.093 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_13:21:40.171 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_13:21:40.212 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_13:21:40.214 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_13:21:40.215 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:21:40.220 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_13:21:40.220 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_13:21:40.220 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_13:21:40.224 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_13:21:40.225 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_13:21:40.225 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_13:21:40.225 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:21:40.225 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_13:21:40.226 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_13:21:40.226 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_13:21:40.226 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_13:21:40.226 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_13:21:40.226 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_13:21:40.226 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:21:40.226 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_13:21:40.226 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_13:21:40.227 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_13:21:40.227 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_13:21:40.228 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:21:40.233 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:21:40.233 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:21:40.233 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:21:40.233 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:21:40.234 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:21:40.235 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_13:21:40.235 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_13:21:40.235 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_13:21:42.146 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_13:21:42.146 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_13:21:42.146 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_13:21:42.146 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_13:21:42.146 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_13:21:42.148 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_13:21:42.148 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_13:21:42.149 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:21:42.152 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_13:21:42.152 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_13:21:42.152 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_13:21:42.152 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_13:21:42.152 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_13:21:42.152 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_13:21:42.152 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:21:42.153 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_13:21:42.153 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_13:21:42.153 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_13:21:42.153 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_13:21:42.153 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_13:21:42.153 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_13:21:42.153 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:21:42.154 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_13:21:42.154 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_13:21:42.157 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_13:21:42.157 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_13:21:42.157 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:21:42.158 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:21:42.158 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:21:42.158 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:21:42.158 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:21:42.158 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:21:42.158 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_13:21:42.158 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_13:21:42.158 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_13:25:15.920 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23672410
2015-05-05_13:25:15.923 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23672410
2015-05-05_13:25:15.923 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@23672410
2015-05-05_13:25:15.924 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c64ec4a
2015-05-05_13:25:15.925 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@527d4300
2015-05-05_13:25:15.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4bc71a6
2015-05-05_13:25:15.928 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@37149fb3
2015-05-05_13:25:15.928 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@37149fb3
2015-05-05_13:25:15.928 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@37149fb3
2015-05-05_13:25:15.929 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@74ec602b
2015-05-05_13:25:15.929 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@74ec602b
2015-05-05_13:25:15.930 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@74ec602b
2015-05-05_13:25:15.931 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@17dc6cd5
2015-05-05_13:25:15.931 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@17dc6cd5
2015-05-05_13:25:15.932 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17dc6cd5
2015-05-05_13:25:15.933 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@476f8579
2015-05-05_13:25:15.934 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@476f8579
2015-05-05_13:25:15.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@476f8579
2015-05-05_13:25:15.939 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6c557548
2015-05-05_13:25:15.939 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6c557548
2015-05-05_13:25:15.939 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6c557548
2015-05-05_13:25:15.941 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a8c1944
2015-05-05_13:25:15.941 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a8c1944
2015-05-05_13:25:15.941 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a8c1944
2015-05-05_13:25:15.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2b3c995b
2015-05-05_13:25:15.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2b3c995b
2015-05-05_13:25:15.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2b3c995b
2015-05-05_13:25:15.984 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@54a7ff8c
2015-05-05_13:25:15.985 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@54a7ff8c
2015-05-05_13:25:15.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@18283c71
2015-05-05_13:25:15.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@18283c71
2015-05-05_13:25:15.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@45de90a4
2015-05-05_13:25:15.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@45de90a4
2015-05-05_13:25:15.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7cfd4d7c
2015-05-05_13:25:15.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7cfd4d7c
2015-05-05_13:25:15.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@19a74a4a
2015-05-05_13:25:15.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@19a74a4a
2015-05-05_13:25:15.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1a7b1690
2015-05-05_13:25:15.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1a7b1690
2015-05-05_13:25:15.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7bba6c39
2015-05-05_13:25:15.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7bba6c39
2015-05-05_13:25:15.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7bba6c39
2015-05-05_13:25:16.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b5f701d
2015-05-05_13:25:16.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@67cd8a6
2015-05-05_13:25:16.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@67cd8a6
2015-05-05_13:25:16.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@67cd8a6
2015-05-05_13:25:16.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4726b7a4
2015-05-05_13:25:16.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@61f8b943
2015-05-05_13:25:16.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61f8b943
2015-05-05_13:25:16.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@123d0ac0
2015-05-05_13:25:16.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@123d0ac0
2015-05-05_13:25:16.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@117d98d4
2015-05-05_13:25:16.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@117d98d4
2015-05-05_13:25:16.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1709f7ed
2015-05-05_13:25:16.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1709f7ed
2015-05-05_13:25:16.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71a05ddc
2015-05-05_13:25:16.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71a05ddc
2015-05-05_13:25:16.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@120a5b89
2015-05-05_13:25:16.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7896da09
2015-05-05_13:25:16.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@78c3e893
2015-05-05_13:25:16.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@78c3e893
2015-05-05_13:25:16.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@78c3e893
2015-05-05_13:25:16.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@262a2cfd
2015-05-05_13:25:16.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@262a2cfd
2015-05-05_13:25:16.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@262a2cfd
2015-05-05_13:25:16.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@27e03044
2015-05-05_13:25:16.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@730eaf9d
2015-05-05_13:25:16.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@730eaf9d
2015-05-05_13:25:16.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@730eaf9d
2015-05-05_13:25:16.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1150106b
2015-05-05_13:25:16.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1150106b
2015-05-05_13:25:16.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1150106b
2015-05-05_13:25:16.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@55a3ae59
2015-05-05_13:25:16.036 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@685b600a
2015-05-05_13:25:16.036 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@685b600a
2015-05-05_13:25:16.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@172260a5
2015-05-05_13:25:16.041 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6b4ecea9
2015-05-05_13:25:16.041 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6b4ecea9
2015-05-05_13:25:16.042 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@424ffce6
2015-05-05_13:25:16.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@19e9e39f
2015-05-05_13:25:16.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@d988e61
2015-05-05_13:25:16.050 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@d988e61
2015-05-05_13:25:16.051 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bc7c5db
2015-05-05_13:25:16.051 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6265ad44
2015-05-05_13:25:16.052 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15f6e035
2015-05-05_13:25:16.052 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@77b0d464
2015-05-05_13:25:16.052 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@624c3e54
2015-05-05_13:25:16.052 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d0ca0d4
2015-05-05_13:25:16.052 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f590a08
2015-05-05_13:25:16.052 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7e3bec73
2015-05-05_13:25:16.069 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-05_13:25:16.075 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-05_13:25:16.076 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-05_13:25:16.078 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-05_13:25:16.089 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-05_13:25:16.089 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-05_13:25:16.090 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_13:25:16.093 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_13:25:16.095 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-05_13:25:16.095 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-05_13:25:16.096 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-05_13:25:16.097 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-05_13:25:16.097 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-05_13:25:16.098 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-05_13:25:16.098 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-05_13:25:16.099 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-05_13:25:16.099 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-05_13:25:16.100 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-05_13:25:16.100 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-05_13:25:16.102 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-05_13:25:16.102 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-05_13:25:16.147 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-05_13:25:16.147 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-05_13:25:16.150 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-05_13:25:16.151 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-05_13:25:16.168 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.driver_class=com.mysql.jdbc.Driver
2015-05-05_13:25:16.168 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.password=root
2015-05-05_13:25:16.169 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem
2015-05-05_13:25:16.169 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.username=root
2015-05-05_13:25:16.169 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_13:25:16.169 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - show_sql=true
2015-05-05_13:25:16.169 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.min_size=5
2015-05-05_13:25:16.169 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_size=20
2015-05-05_13:25:16.169 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.timeout=300
2015-05-05_13:25:16.169 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_statements=50
2015-05-05_13:25:16.169 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.idle_test_period=3000
2015-05-05_13:25:16.170 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Session-factory config [null] named class [com.taylan.persistence.DAO.Personaltrainers] for mapping
2015-05-05_13:25:16.200 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000041: Configured SessionFactory: null
2015-05-05_13:25:16.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 7, sun.boot.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\sunrsasign.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\classes, user.country.format=GB, sun.desktop=windows, hibernate.c3p0.max_size=20, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_25-b18, hibernate.c3p0.min_size=5, user.name=Asus, user.language.format=en, idea.launcher.bin.path=D:\IntelliJ IDEA 14.1.2\bin, javafx.runtime.version=8.0.25-b18, hibernate.c3p0.timeout=300, user.language=tr, sun.boot.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\bin, java.version=1.8.0_25, user.timezone=Asia/Istanbul, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1254, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=TR, java.home=C:\Program Files (x86)\Java\jdk1.8.0_25\jre, java.vm.info=mixed mode, os.version=6.1, path.separator=;, java.vm.version=25.25-b02, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\Asus, java.specification.vendor=Oracle Corporation, java.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=com.intellij.rt.execution.application.AppMain com.taylan.core.MainApp, java.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\deploy.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\javaws.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfxswt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\management-agent.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\plugin.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\access-bridge-64.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\cldrdata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\dnsns.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jaccess.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jfxrt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\localedata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\nashorn.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunec.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunjce_provider.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunmscapi.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunpkcs11.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\zipfs.jar;C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;D:\IntelliJ IDEA 14.1.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7532, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, hibernate.c3p0.idle_test_period=3000, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, javafx.version=8.0.25, file.encoding=windows-1254, java.specification.version=1.8, hibernate.c3p0.max_statements=50, hibernate.show_sql=true}
2015-05-05_13:25:16.218 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2015-05-05_13:25:16.240 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
2015-05-05_13:25:16.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files
2015-05-05_13:25:16.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Process annotated classes
2015-05-05_13:25:16.274 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_13:25:16.290 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.QueryBinder - Binding named query: loadPersonalTrainers => from Personaltrainers
2015-05-05_13:25:16.298 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2015-05-05_13:25:16.300 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2015-05-05_13:25:16.306 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Import with entity name Personaltrainers
2015-05-05_13:25:16.309 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Bind entity com.taylan.persistence.DAO.Personaltrainers on table personaltrainers
2015-05-05_13:25:16.334 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=idpersonalTrainers, insertable=true, updatable=true, unique=true}
2015-05-05_13:25:16.339 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property idpersonalTrainers with lazy=false
2015-05-05_13:25:16.342 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for idpersonalTrainers
2015-05-05_13:25:16.344 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property idpersonalTrainers
2015-05-05_13:25:16.348 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=contact, insertable=true, updatable=true, unique=false}
2015-05-05_13:25:16.348 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property contact with lazy=false
2015-05-05_13:25:16.352 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for contact
2015-05-05_13:25:16.353 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property contact
2015-05-05_13:25:16.353 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=email, insertable=true, updatable=true, unique=false}
2015-05-05_13:25:16.353 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2015-05-05_13:25:16.353 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for email
2015-05-05_13:25:16.353 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property email
2015-05-05_13:25:16.354 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=experience, insertable=true, updatable=true, unique=false}
2015-05-05_13:25:16.354 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property experience with lazy=false
2015-05-05_13:25:16.354 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for experience
2015-05-05_13:25:16.354 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property experience
2015-05-05_13:25:16.354 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=name, insertable=true, updatable=true, unique=false}
2015-05-05_13:25:16.354 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2015-05-05_13:25:16.355 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for name
2015-05-05_13:25:16.355 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property name
2015-05-05_13:25:16.357 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for idpersonalTrainers
2015-05-05_13:25:16.357 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for contact
2015-05-05_13:25:16.360 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for email
2015-05-05_13:25:16.360 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for experience
2015-05-05_13:25:16.360 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2015-05-05_13:25:16.361 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
2015-05-05_13:25:16.362 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_13:25:16.362 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_13:25:16.363 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing collection mappings
2015-05-05_13:25:16.363 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
2015-05-05_13:25:16.363 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing association property references
2015-05-05_13:25:16.363 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints
2015-05-05_13:25:16.372 [JavaFX Application Thread] WARN  o.h.s.j.c.i.ConnectionProviderInitiator - HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
2015-05-05_13:25:16.374 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2015-05-05_13:25:16.378 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20
2015-05-05_13:25:16.378 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000006: Autocommit mode: false
2015-05-05_13:25:16.378 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/sportclubsystem]
2015-05-05_13:25:16.378 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000046: Connection properties: {user=root, password=root}
2015-05-05_13:25:16.395 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Opening new JDBC connection
2015-05-05_13:25:16.621 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Created connection to: jdbc:mysql://localhost:3306/sportclubsystem, Isolation Level: 4
2015-05-05_13:25:16.621 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-05-05_13:25:16.621 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2015-05-05_13:25:16.622 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - JDBC version : 3.0
2015-05-05_13:25:16.635 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_13:25:16.642 [JavaFX Application Thread] INFO  o.h.e.j.internal.LobCreatorBuilder - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2015-05-05_13:25:16.654 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
2015-05-05_13:25:16.654 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
2015-05-05_13:25:16.654 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
2015-05-05_13:25:16.654 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
2015-05-05_13:25:16.654 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
2015-05-05_13:25:16.655 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
2015-05-05_13:25:16.655 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
2015-05-05_13:25:16.655 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
2015-05-05_13:25:16.655 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Connection release mode: auto
2015-05-05_13:25:16.658 [JavaFX Application Thread] INFO  o.h.e.t.i.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2015-05-05_13:25:16.662 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
2015-05-05_13:25:16.662 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
2015-05-05_13:25:16.662 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
2015-05-05_13:25:16.662 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
2015-05-05_13:25:16.662 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
2015-05-05_13:25:16.662 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2015-05-05_13:25:16.664 [JavaFX Application Thread] INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2015-05-05_13:25:16.664 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
2015-05-05_13:25:16.665 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
2015-05-05_13:25:16.665 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
2015-05-05_13:25:16.665 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query cache: disabled
2015-05-05_13:25:16.665 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2015-05-05_13:25:16.666 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2015-05-05_13:25:16.666 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
2015-05-05_13:25:16.666 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
2015-05-05_13:25:16.670 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Statistics: disabled
2015-05-05_13:25:16.670 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
2015-05-05_13:25:16.670 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
2015-05-05_13:25:16.670 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Named query checking : enabled
2015-05-05_13:25:16.670 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2015-05-05_13:25:16.670 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
2015-05-05_13:25:16.681 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2015-05-05_13:25:16.691 [JavaFX Application Thread] TRACE org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@215b0646
2015-05-05_13:25:16.692 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2015-05-05_13:25:16.692 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 7, sun.boot.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\sunrsasign.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\classes, user.country.format=GB, sun.desktop=windows, hibernate.c3p0.max_size=20, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_25-b18, hibernate.c3p0.min_size=5, user.name=Asus, user.language.format=en, idea.launcher.bin.path=D:\IntelliJ IDEA 14.1.2\bin, javafx.runtime.version=8.0.25-b18, hibernate.c3p0.timeout=300, user.language=tr, sun.boot.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\bin, java.version=1.8.0_25, user.timezone=Asia/Istanbul, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1254, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=TR, java.home=C:\Program Files (x86)\Java\jdk1.8.0_25\jre, java.vm.info=mixed mode, os.version=6.1, path.separator=;, java.vm.version=25.25-b02, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\Asus, java.specification.vendor=Oracle Corporation, java.library.path=C:\Program Files (x86)\Java\jdk1.8.0_25\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=com.intellij.rt.execution.application.AppMain com.taylan.core.MainApp, java.class.path=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\deploy.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\javaws.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jfxswt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\management-agent.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\plugin.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\access-bridge-64.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\cldrdata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\dnsns.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jaccess.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\jfxrt.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\localedata.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\nashorn.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunec.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunjce_provider.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunmscapi.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\sunpkcs11.jar;C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext\zipfs.jar;C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar;D:\IntelliJ IDEA 14.1.2\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7532, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files (x86)\Java\jdk1.8.0_25\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, hibernate.c3p0.idle_test_period=3000, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, javafx.version=8.0.25, file.encoding=windows-1254, java.specification.version=1.8, hibernate.show_sql=true, hibernate.c3p0.max_statements=50}
2015-05-05_13:25:16.703 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
2015-05-05_13:25:16.795 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_13:25:16.795 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idpersonalTrainers from sportclubsystem.personaltrainers where idpersonalTrainers =?
2015-05-05_13:25:16.796 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Snapshot select: select personaltr_.idpersonalTrainers, personaltr_.contact as contact0_, personaltr_.email as email0_, personaltr_.experience as experience0_, personaltr_.name as name0_ from sportclubsystem.personaltrainers personaltr_ where personaltr_.idpersonalTrainers=?
2015-05-05_13:25:16.796 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert 0: insert into sportclubsystem.personaltrainers (contact, email, experience, name, idpersonalTrainers) values (?, ?, ?, ?, ?)
2015-05-05_13:25:16.796 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update 0: update sportclubsystem.personaltrainers set contact=?, email=?, experience=?, name=? where idpersonalTrainers=?
2015-05-05_13:25:16.799 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete 0: delete from sportclubsystem.personaltrainers where idpersonalTrainers=?
2015-05-05_13:25:16.800 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Identity insert: insert into sportclubsystem.personaltrainers (contact, email, experience, name) values (?, ?, ?, ?)
2015-05-05_13:25:16.817 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [NONE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:25:16.817 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:25:16.817 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:25:16.818 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE_NOWAIT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:25:16.818 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [FORCE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:25:16.818 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? lock in share mode
2015-05-05_13:25:16.818 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_WRITE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:25:16.818 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_13:25:16.819 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:25:16.819 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:25:16.827 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:25:16.827 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_13:25:16.961 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3b5574d3
2015-05-05_13:25:16.964 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 24cc1690-17cc-4e38-900c-cda0e2bbc09e (<unnamed>)
2015-05-05_13:25:16.967 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2015-05-05_13:25:16.967 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiated session factory
2015-05-05_13:25:16.968 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 1 named HQL queries
2015-05-05_13:25:16.968 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking named query: loadPersonalTrainers
2015-05-05_13:25:16.998 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_13:25:17.003 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'com'
                |  |  |  \-[IDENT] Node: 'taylan'
                |  |  \-[IDENT] Node: 'persistence'
                |  \-[IDENT] Node: 'DAO'
                \-[IDENT] Node: 'Personaltrainers'

2015-05-05_13:25:17.003 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_13:25:17.022 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2015-05-05_13:25:17.035 [JavaFX Application Thread] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.taylan.persistence.DAO.Personaltrainers (<no alias>) -> personaltr0_
2015-05-05_13:25:17.035 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2015-05-05_13:25:17.035 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} sportclubsystem.personaltrainers personaltr0_ ) )
2015-05-05_13:25:17.039 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2015-05-05_13:25:17.043 [JavaFX Application Thread] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [sportclubsystem.personaltrainers personaltr0_]
2015-05-05_13:25:17.044 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2015-05-05_13:25:17.045 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (sportclubsystem.personaltrainers)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'personaltr0_.idpersonalTrainers as idperson1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}}
    |  \-[SQL_TOKEN] SqlFragment: 'personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[personaltr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'sportclubsystem.personaltrainers personaltr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}

2015-05-05_13:25:17.045 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_13:25:17.056 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_13:25:17.056 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_13:25:17.056 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_13:25:17.062 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 0 named SQL queries
2015-05-05_13:25:17.068 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2015-05-05_13:25:17.107 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_13:25:17.107 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_13:25:17.108 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_13:25:17.108 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_13:25:17.190 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_13:25:17.260 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_13:25:17.263 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_13:25:17.264 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:25:17.270 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_13:25:17.270 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_13:25:17.270 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_13:25:17.274 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_13:25:17.276 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_13:25:17.276 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_13:25:17.276 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:25:17.276 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_13:25:17.277 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_13:25:17.277 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_13:25:17.277 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_13:25:17.277 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_13:25:17.277 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_13:25:17.277 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:25:17.277 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_13:25:17.277 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_13:25:17.278 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_13:25:17.278 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_13:25:17.279 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:25:17.284 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_13:25:17.285 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:25:17.285 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_13:25:17.285 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:25:17.285 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_13:25:17.286 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_13:25:17.286 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_13:25:17.287 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:45:21.318 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23a27861
2015-05-05_19:45:21.333 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23a27861
2015-05-05_19:45:21.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@23a27861
2015-05-05_19:45:21.355 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d687744
2015-05-05_19:45:21.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4883ab11
2015-05-05_19:45:21.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f8fe448
2015-05-05_19:45:21.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18bc4b2
2015-05-05_19:45:21.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18bc4b2
2015-05-05_19:45:21.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18bc4b2
2015-05-05_19:45:21.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@60fa2bcb
2015-05-05_19:45:21.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@60fa2bcb
2015-05-05_19:45:21.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@60fa2bcb
2015-05-05_19:45:21.405 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@608af53b
2015-05-05_19:45:21.405 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@608af53b
2015-05-05_19:45:21.405 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@608af53b
2015-05-05_19:45:21.487 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@789d008b
2015-05-05_19:45:21.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@789d008b
2015-05-05_19:45:21.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@789d008b
2015-05-05_19:45:21.855 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@53cb3ad8
2015-05-05_19:45:21.855 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@53cb3ad8
2015-05-05_19:45:21.855 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@53cb3ad8
2015-05-05_19:45:22.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@35327e13
2015-05-05_19:45:22.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@35327e13
2015-05-05_19:45:22.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@35327e13
2015-05-05_19:45:22.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52f480a0
2015-05-05_19:45:22.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52f480a0
2015-05-05_19:45:22.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@52f480a0
2015-05-05_19:45:22.088 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3beaff9
2015-05-05_19:45:22.094 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3beaff9
2015-05-05_19:45:22.121 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7d809da4
2015-05-05_19:45:22.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7d809da4
2015-05-05_19:45:22.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1701dfa7
2015-05-05_19:45:22.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1701dfa7
2015-05-05_19:45:22.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4920676a
2015-05-05_19:45:22.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4920676a
2015-05-05_19:45:22.244 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3084a581
2015-05-05_19:45:22.244 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3084a581
2015-05-05_19:45:22.245 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@f296db1
2015-05-05_19:45:22.246 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@f296db1
2015-05-05_19:45:22.331 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5d00167
2015-05-05_19:45:22.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5d00167
2015-05-05_19:45:22.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5d00167
2015-05-05_19:45:22.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@374ee37a
2015-05-05_19:45:22.342 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3051a430
2015-05-05_19:45:22.342 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3051a430
2015-05-05_19:45:22.342 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3051a430
2015-05-05_19:45:22.343 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@47df3d06
2015-05-05_19:45:22.345 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@296bac8b
2015-05-05_19:45:22.346 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@296bac8b
2015-05-05_19:45:22.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@59707ddf
2015-05-05_19:45:22.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59707ddf
2015-05-05_19:45:22.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4072e3e4
2015-05-05_19:45:22.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4072e3e4
2015-05-05_19:45:22.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2c5dc4f3
2015-05-05_19:45:22.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c5dc4f3
2015-05-05_19:45:22.379 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7728a255
2015-05-05_19:45:22.379 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7728a255
2015-05-05_19:45:22.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e458314
2015-05-05_19:45:22.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2bf4fc9c
2015-05-05_19:45:22.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@30fa8ae7
2015-05-05_19:45:22.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@30fa8ae7
2015-05-05_19:45:22.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@30fa8ae7
2015-05-05_19:45:22.405 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@183018e
2015-05-05_19:45:22.405 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@183018e
2015-05-05_19:45:22.406 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@183018e
2015-05-05_19:45:22.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2fa680a7
2015-05-05_19:45:22.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1982d566
2015-05-05_19:45:22.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1982d566
2015-05-05_19:45:22.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1982d566
2015-05-05_19:45:22.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@455dc1de
2015-05-05_19:45:22.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@455dc1de
2015-05-05_19:45:22.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@455dc1de
2015-05-05_19:45:22.419 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6c7222cf
2015-05-05_19:45:22.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5c9f5984
2015-05-05_19:45:22.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5c9f5984
2015-05-05_19:45:22.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77e466cb
2015-05-05_19:45:22.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@470c1624
2015-05-05_19:45:22.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@470c1624
2015-05-05_19:45:22.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2968226d
2015-05-05_19:45:22.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@18712cb9
2015-05-05_19:45:22.511 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2180290d
2015-05-05_19:45:22.516 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2180290d
2015-05-05_19:45:22.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3564a5bd
2015-05-05_19:45:22.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@158c3a5d
2015-05-05_19:45:22.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3ff39499
2015-05-05_19:45:22.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11076b42
2015-05-05_19:45:22.518 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1de6d92
2015-05-05_19:45:22.518 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7574f126
2015-05-05_19:45:22.518 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5680f44d
2015-05-05_19:45:22.518 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7cf7c8a4
2015-05-05_19:45:22.841 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-05_19:45:22.900 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-05_19:45:22.940 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-05_19:45:22.963 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-05_19:45:23.564 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-05_19:45:23.590 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-05_19:45:23.598 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_19:45:23.602 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_19:45:23.630 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-05_19:45:23.644 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-05_19:45:23.676 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-05_19:45:23.689 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-05_19:45:23.690 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-05_19:45:23.704 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-05_19:45:23.705 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-05_19:45:23.705 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-05_19:45:23.706 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-05_19:45:23.710 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-05_19:45:23.713 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-05_19:45:23.821 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-05_19:45:23.822 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-05_19:45:24.064 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-05_19:45:24.064 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-05_19:45:24.068 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-05_19:45:24.068 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-05_19:45:24.440 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.driver_class=com.mysql.jdbc.Driver
2015-05-05_19:45:24.440 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.password=root
2015-05-05_19:45:24.440 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem
2015-05-05_19:45:24.440 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.username=root
2015-05-05_19:45:24.440 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_19:45:24.441 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - show_sql=true
2015-05-05_19:45:24.441 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.min_size=5
2015-05-05_19:45:24.441 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_size=20
2015-05-05_19:45:24.441 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.timeout=300
2015-05-05_19:45:24.441 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_statements=50
2015-05-05_19:45:24.441 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.idle_test_period=3000
2015-05-05_19:45:24.442 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Session-factory config [null] named class [com.taylan.persistence.DAO.Personaltrainers] for mapping
2015-05-05_19:45:24.660 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000041: Configured SessionFactory: null
2015-05-05_19:45:24.660 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Properties: {javafx.version=8.0.31, hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_31\jre\bin, java.vm.version=25.31-b07, hibernate.connection.username=root, user.country.format=GB, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=TR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, java.runtime.version=1.8.0_31-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javafx.runtime.version=8.0.31-b13, hibernate.c3p0.max_statements=50, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_31\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1254, hibernate.c3p0.timeout=300, java.library.path=C:\Program Files\Java\jdk1.8.0_31\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.1, user.home=C:\Users\Asus, user.timezone=Asia/Istanbul, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1254, java.specification.version=1.8, hibernate.c3p0.min_size=5, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, java.class.path=C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar, user.name=Asus, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.java.command=com.taylan.core.MainApp, java.home=C:\Program Files\Java\jdk1.8.0_31\jre, sun.arch.data.model=64, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, user.language=tr, java.specification.vendor=Oracle Corporation, user.language.format=en, hibernate.c3p0.max_size=20, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_31, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_31\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_31\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_31\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-05-05_19:45:24.940 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2015-05-05_19:45:25.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
2015-05-05_19:45:26.455 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files
2015-05-05_19:45:26.455 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Process annotated classes
2015-05-05_19:45:26.549 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_19:45:26.998 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.QueryBinder - Binding named query: loadPersonalTrainers => from Personaltrainers
2015-05-05_19:45:27.231 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2015-05-05_19:45:27.234 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2015-05-05_19:45:27.310 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Import with entity name Personaltrainers
2015-05-05_19:45:27.312 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Bind entity com.taylan.persistence.DAO.Personaltrainers on table personaltrainers
2015-05-05_19:45:27.499 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=idpersonalTrainers, insertable=true, updatable=true, unique=true}
2015-05-05_19:45:27.676 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property idpersonalTrainers with lazy=false
2015-05-05_19:45:27.679 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for idpersonalTrainers
2015-05-05_19:45:27.680 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property idpersonalTrainers
2015-05-05_19:45:27.966 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=contact, insertable=true, updatable=true, unique=false}
2015-05-05_19:45:27.966 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property contact with lazy=false
2015-05-05_19:45:27.970 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for contact
2015-05-05_19:45:27.970 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property contact
2015-05-05_19:45:27.970 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=email, insertable=true, updatable=true, unique=false}
2015-05-05_19:45:27.970 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2015-05-05_19:45:27.970 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for email
2015-05-05_19:45:27.971 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property email
2015-05-05_19:45:27.971 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=experience, insertable=true, updatable=true, unique=false}
2015-05-05_19:45:27.971 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property experience with lazy=false
2015-05-05_19:45:27.971 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for experience
2015-05-05_19:45:27.971 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property experience
2015-05-05_19:45:27.971 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=name, insertable=true, updatable=true, unique=false}
2015-05-05_19:45:27.972 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2015-05-05_19:45:27.972 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for name
2015-05-05_19:45:27.972 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property name
2015-05-05_19:45:27.974 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for idpersonalTrainers
2015-05-05_19:45:27.974 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for contact
2015-05-05_19:45:27.977 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for email
2015-05-05_19:45:27.978 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for experience
2015-05-05_19:45:27.978 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2015-05-05_19:45:27.978 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
2015-05-05_19:45:27.979 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_19:45:27.979 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_19:45:27.980 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing collection mappings
2015-05-05_19:45:27.980 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
2015-05-05_19:45:27.980 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing association property references
2015-05-05_19:45:27.980 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints
2015-05-05_19:45:28.438 [JavaFX Application Thread] WARN  o.h.s.j.c.i.ConnectionProviderInitiator - HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
2015-05-05_19:45:28.440 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2015-05-05_19:45:28.619 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20
2015-05-05_19:45:28.620 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000006: Autocommit mode: false
2015-05-05_19:45:28.620 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/sportclubsystem]
2015-05-05_19:45:28.620 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000046: Connection properties: {user=root, password=root}
2015-05-05_19:45:29.604 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Opening new JDBC connection
2015-05-05_19:45:34.374 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Created connection to: jdbc:mysql://localhost:3306/sportclubsystem, Isolation Level: 4
2015-05-05_19:45:34.374 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-05-05_19:45:34.374 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2015-05-05_19:45:34.375 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - JDBC version : 3.0
2015-05-05_19:45:34.759 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_19:45:35.030 [JavaFX Application Thread] INFO  o.h.e.j.internal.LobCreatorBuilder - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2015-05-05_19:45:35.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
2015-05-05_19:45:35.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
2015-05-05_19:45:35.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
2015-05-05_19:45:35.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
2015-05-05_19:45:35.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
2015-05-05_19:45:35.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
2015-05-05_19:45:35.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
2015-05-05_19:45:35.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
2015-05-05_19:45:35.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Connection release mode: auto
2015-05-05_19:45:35.397 [JavaFX Application Thread] INFO  o.h.e.t.i.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2015-05-05_19:45:35.437 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
2015-05-05_19:45:35.437 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
2015-05-05_19:45:35.438 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
2015-05-05_19:45:35.438 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
2015-05-05_19:45:35.438 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
2015-05-05_19:45:35.438 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2015-05-05_19:45:35.503 [JavaFX Application Thread] INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2015-05-05_19:45:35.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
2015-05-05_19:45:35.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
2015-05-05_19:45:35.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
2015-05-05_19:45:35.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query cache: disabled
2015-05-05_19:45:35.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2015-05-05_19:45:35.525 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2015-05-05_19:45:35.525 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
2015-05-05_19:45:35.525 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
2015-05-05_19:45:35.528 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Statistics: disabled
2015-05-05_19:45:35.528 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
2015-05-05_19:45:35.529 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
2015-05-05_19:45:35.529 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Named query checking : enabled
2015-05-05_19:45:35.529 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2015-05-05_19:45:35.529 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
2015-05-05_19:45:36.081 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2015-05-05_19:45:36.735 [JavaFX Application Thread] TRACE org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@f26e71
2015-05-05_19:45:36.818 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2015-05-05_19:45:36.818 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiating session factory with properties: {javafx.version=8.0.31, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=root, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_31\jre\bin, java.vm.version=25.31-b07, hibernate.connection.username=root, user.country.format=GB, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=TR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, java.runtime.version=1.8.0_31-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javafx.runtime.version=8.0.31-b13, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_31\jre\lib\endorsed, os.arch=amd64, hibernate.c3p0.max_statements=50, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1254, hibernate.c3p0.timeout=300, java.library.path=C:\Program Files\Java\jdk1.8.0_31\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.1, user.home=C:\Users\Asus, user.timezone=Asia/Istanbul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=Cp1254, hibernate.c3p0.min_size=5, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Asus, java.class.path=C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0_31\jre, sun.java.command=com.taylan.core.MainApp, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=tr, user.language.format=en, awt.toolkit=sun.awt.windows.WToolkit, hibernate.c3p0.max_size=20, java.vm.info=mixed mode, java.version=1.8.0_31, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_31\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_31\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_31\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-05-05_19:45:37.015 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
2015-05-05_19:45:40.507 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_19:45:40.507 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idpersonalTrainers from sportclubsystem.personaltrainers where idpersonalTrainers =?
2015-05-05_19:45:40.507 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Snapshot select: select personaltr_.idpersonalTrainers, personaltr_.contact as contact0_, personaltr_.email as email0_, personaltr_.experience as experience0_, personaltr_.name as name0_ from sportclubsystem.personaltrainers personaltr_ where personaltr_.idpersonalTrainers=?
2015-05-05_19:45:40.508 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert 0: insert into sportclubsystem.personaltrainers (contact, email, experience, name, idpersonalTrainers) values (?, ?, ?, ?, ?)
2015-05-05_19:45:40.508 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update 0: update sportclubsystem.personaltrainers set contact=?, email=?, experience=?, name=? where idpersonalTrainers=?
2015-05-05_19:45:40.515 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete 0: delete from sportclubsystem.personaltrainers where idpersonalTrainers=?
2015-05-05_19:45:40.515 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Identity insert: insert into sportclubsystem.personaltrainers (contact, email, experience, name) values (?, ?, ?, ?)
2015-05-05_19:45:41.125 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [NONE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:45:41.125 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:45:41.125 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:45:41.125 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE_NOWAIT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:45:41.126 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [FORCE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:45:41.126 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? lock in share mode
2015-05-05_19:45:41.126 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_WRITE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:45:41.126 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:45:41.127 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:45:41.127 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:45:41.179 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:45:41.179 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:45:41.364 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@68980ab2
2015-05-05_19:45:41.366 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 2bfab747-a384-475f-b6f7-a4fa2d03c71c (<unnamed>)
2015-05-05_19:45:41.369 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2015-05-05_19:45:41.369 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiated session factory
2015-05-05_19:45:41.370 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 1 named HQL queries
2015-05-05_19:45:41.370 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking named query: loadPersonalTrainers
2015-05-05_19:45:43.434 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_19:45:43.685 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'com'
                |  |  |  \-[IDENT] Node: 'taylan'
                |  |  \-[IDENT] Node: 'persistence'
                |  \-[IDENT] Node: 'DAO'
                \-[IDENT] Node: 'Personaltrainers'

2015-05-05_19:45:43.686 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_19:45:44.631 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2015-05-05_19:45:44.896 [JavaFX Application Thread] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.taylan.persistence.DAO.Personaltrainers (<no alias>) -> personaltr0_
2015-05-05_19:45:44.896 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2015-05-05_19:45:44.896 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} sportclubsystem.personaltrainers personaltr0_ ) )
2015-05-05_19:45:44.904 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2015-05-05_19:45:44.965 [JavaFX Application Thread] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [sportclubsystem.personaltrainers personaltr0_]
2015-05-05_19:45:44.966 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2015-05-05_19:45:44.966 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (sportclubsystem.personaltrainers)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'personaltr0_.idpersonalTrainers as idperson1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}}
    |  \-[SQL_TOKEN] SqlFragment: 'personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[personaltr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'sportclubsystem.personaltrainers personaltr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}

2015-05-05_19:45:44.967 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_19:45:45.067 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_19:45:45.067 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:45:45.067 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_19:45:45.342 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 0 named SQL queries
2015-05-05_19:45:45.464 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2015-05-05_19:45:46.453 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:45:46.453 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:45:46.453 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:45:46.453 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:45:47.967 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:45:48.543 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:45:48.545 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:45:48.675 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:45:48.738 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:45:48.739 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:45:48.739 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:45:48.742 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:45:48.743 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:45:48.743 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:45:48.744 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:45:48.744 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:45:48.744 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:45:48.744 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:45:48.744 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:45:48.744 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:45:48.744 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:45:48.744 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:45:48.744 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:45:48.744 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:45:48.745 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:45:48.745 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:45:48.746 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:45:48.758 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:45:48.758 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:45:48.758 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:45:48.758 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:45:48.758 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:45:48.759 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:45:48.760 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:45:48.760 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:46:05.849 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:46:05.849 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:46:05.849 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:46:05.849 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:46:05.850 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:46:05.883 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:46:05.884 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:46:05.884 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:46:05.887 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:46:05.887 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:46:05.887 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:46:05.887 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:46:05.888 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:46:05.888 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:46:05.888 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:46:05.888 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:46:05.888 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:46:05.888 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:46:05.888 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:46:05.888 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:46:05.889 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:46:05.889 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:46:05.889 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:46:05.889 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:46:05.893 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:46:05.893 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:46:05.893 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:46:05.893 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:46:05.893 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:46:05.893 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:46:05.893 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:46:05.893 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:46:05.894 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:46:05.894 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:46:05.894 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:46:07.229 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:46:07.229 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:46:07.229 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:46:07.229 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:46:07.229 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:46:07.234 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:46:07.234 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:46:07.234 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:46:07.234 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:46:07.235 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:46:07.235 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:46:07.235 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:46:07.235 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:46:07.235 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:46:07.235 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:46:07.235 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:46:07.235 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:46:07.236 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:46:07.236 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:46:07.236 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:46:07.236 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:46:07.239 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:46:07.240 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:46:07.240 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:46:07.240 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:46:07.240 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:46:07.240 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:46:07.240 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:46:07.240 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:46:07.241 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:46:07.241 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:46:07.241 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:46:07.241 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:46:07.241 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:46:07.241 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:46:08.311 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:46:08.312 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:46:08.315 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:46:08.316 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:46:08.316 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:46:08.317 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:46:08.317 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:46:08.317 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:46:08.318 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:46:08.318 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:46:08.318 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:46:08.318 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:46:08.318 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:46:08.318 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:46:08.318 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:46:08.318 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:46:08.318 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:46:08.318 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:46:08.321 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:46:08.322 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:46:08.322 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:46:08.322 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:46:08.322 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:46:08.322 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:46:08.322 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:46:08.322 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:46:08.323 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:46:08.323 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:46:08.323 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:46:08.323 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:46:08.323 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:46:08.323 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:46:08.323 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:46:08.323 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:46:08.327 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:49:02.760 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23a27861
2015-05-05_19:49:02.763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23a27861
2015-05-05_19:49:02.763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@23a27861
2015-05-05_19:49:02.764 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d687744
2015-05-05_19:49:02.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4883ab11
2015-05-05_19:49:02.766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f8fe448
2015-05-05_19:49:02.768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18bc4b2
2015-05-05_19:49:02.768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18bc4b2
2015-05-05_19:49:02.768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18bc4b2
2015-05-05_19:49:02.769 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@60fa2bcb
2015-05-05_19:49:02.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@60fa2bcb
2015-05-05_19:49:02.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@60fa2bcb
2015-05-05_19:49:02.772 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@608af53b
2015-05-05_19:49:02.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@608af53b
2015-05-05_19:49:02.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@608af53b
2015-05-05_19:49:02.775 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@789d008b
2015-05-05_19:49:02.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@789d008b
2015-05-05_19:49:02.780 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@789d008b
2015-05-05_19:49:02.782 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@53cb3ad8
2015-05-05_19:49:02.782 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@53cb3ad8
2015-05-05_19:49:02.782 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@53cb3ad8
2015-05-05_19:49:02.784 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@35327e13
2015-05-05_19:49:02.784 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@35327e13
2015-05-05_19:49:02.784 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@35327e13
2015-05-05_19:49:02.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52f480a0
2015-05-05_19:49:02.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52f480a0
2015-05-05_19:49:02.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@52f480a0
2015-05-05_19:49:02.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3beaff9
2015-05-05_19:49:02.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3beaff9
2015-05-05_19:49:02.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7d809da4
2015-05-05_19:49:02.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7d809da4
2015-05-05_19:49:02.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1701dfa7
2015-05-05_19:49:02.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1701dfa7
2015-05-05_19:49:02.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4920676a
2015-05-05_19:49:02.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4920676a
2015-05-05_19:49:02.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3084a581
2015-05-05_19:49:02.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3084a581
2015-05-05_19:49:02.801 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@f296db1
2015-05-05_19:49:02.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@f296db1
2015-05-05_19:49:02.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5d00167
2015-05-05_19:49:02.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5d00167
2015-05-05_19:49:02.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5d00167
2015-05-05_19:49:02.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@374ee37a
2015-05-05_19:49:02.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3051a430
2015-05-05_19:49:02.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3051a430
2015-05-05_19:49:02.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3051a430
2015-05-05_19:49:02.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@47df3d06
2015-05-05_19:49:02.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@296bac8b
2015-05-05_19:49:02.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@296bac8b
2015-05-05_19:49:02.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@59707ddf
2015-05-05_19:49:02.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59707ddf
2015-05-05_19:49:02.817 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4072e3e4
2015-05-05_19:49:02.817 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4072e3e4
2015-05-05_19:49:02.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2c5dc4f3
2015-05-05_19:49:02.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c5dc4f3
2015-05-05_19:49:02.820 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7728a255
2015-05-05_19:49:02.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7728a255
2015-05-05_19:49:02.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e458314
2015-05-05_19:49:02.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2bf4fc9c
2015-05-05_19:49:02.824 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@30fa8ae7
2015-05-05_19:49:02.824 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@30fa8ae7
2015-05-05_19:49:02.824 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@30fa8ae7
2015-05-05_19:49:02.863 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@183018e
2015-05-05_19:49:02.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@183018e
2015-05-05_19:49:02.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@183018e
2015-05-05_19:49:02.868 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2fa680a7
2015-05-05_19:49:02.869 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1982d566
2015-05-05_19:49:02.870 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1982d566
2015-05-05_19:49:02.870 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1982d566
2015-05-05_19:49:02.871 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@455dc1de
2015-05-05_19:49:02.871 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@455dc1de
2015-05-05_19:49:02.871 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@455dc1de
2015-05-05_19:49:02.872 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6c7222cf
2015-05-05_19:49:02.877 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5c9f5984
2015-05-05_19:49:02.877 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5c9f5984
2015-05-05_19:49:02.878 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77e466cb
2015-05-05_19:49:02.881 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@470c1624
2015-05-05_19:49:02.881 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@470c1624
2015-05-05_19:49:02.882 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2968226d
2015-05-05_19:49:02.883 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@18712cb9
2015-05-05_19:49:02.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2180290d
2015-05-05_19:49:02.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2180290d
2015-05-05_19:49:02.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3564a5bd
2015-05-05_19:49:02.893 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@158c3a5d
2015-05-05_19:49:02.893 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3ff39499
2015-05-05_19:49:02.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11076b42
2015-05-05_19:49:02.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1de6d92
2015-05-05_19:49:02.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7574f126
2015-05-05_19:49:02.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5680f44d
2015-05-05_19:49:02.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7cf7c8a4
2015-05-05_19:49:02.910 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-05_19:49:02.915 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-05_19:49:02.917 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-05_19:49:02.918 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-05_19:49:02.929 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-05_19:49:02.929 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-05_19:49:02.930 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_19:49:02.933 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_19:49:02.935 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-05_19:49:02.935 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-05_19:49:02.936 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-05_19:49:02.936 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-05_19:49:02.937 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-05_19:49:02.937 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-05_19:49:02.938 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-05_19:49:02.938 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-05_19:49:02.939 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-05_19:49:02.939 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-05_19:49:02.940 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-05_19:49:02.942 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-05_19:49:02.942 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-05_19:49:02.963 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-05_19:49:02.963 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-05_19:49:02.966 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-05_19:49:02.967 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-05_19:49:02.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.driver_class=com.mysql.jdbc.Driver
2015-05-05_19:49:02.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.password=root
2015-05-05_19:49:02.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem
2015-05-05_19:49:02.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.username=root
2015-05-05_19:49:02.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_19:49:02.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - show_sql=true
2015-05-05_19:49:02.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.min_size=5
2015-05-05_19:49:02.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_size=20
2015-05-05_19:49:02.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.timeout=300
2015-05-05_19:49:02.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_statements=50
2015-05-05_19:49:02.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.idle_test_period=3000
2015-05-05_19:49:02.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Session-factory config [null] named class [com.taylan.persistence.DAO.Personaltrainers] for mapping
2015-05-05_19:49:02.991 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000041: Configured SessionFactory: null
2015-05-05_19:49:02.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Properties: {javafx.version=8.0.31, hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_31\jre\bin, java.vm.version=25.31-b07, hibernate.connection.username=root, user.country.format=GB, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=TR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, java.runtime.version=1.8.0_31-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javafx.runtime.version=8.0.31-b13, hibernate.c3p0.max_statements=50, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_31\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1254, hibernate.c3p0.timeout=300, java.library.path=C:\Program Files\Java\jdk1.8.0_31\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.1, user.home=C:\Users\Asus, user.timezone=Asia/Istanbul, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1254, java.specification.version=1.8, hibernate.c3p0.min_size=5, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, java.class.path=C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar, user.name=Asus, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.java.command=com.taylan.core.MainApp, java.home=C:\Program Files\Java\jdk1.8.0_31\jre, sun.arch.data.model=64, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, user.language=tr, java.specification.vendor=Oracle Corporation, user.language.format=en, hibernate.c3p0.max_size=20, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_31, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_31\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_31\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_31\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-05-05_19:49:03.003 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2015-05-05_19:49:03.022 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
2015-05-05_19:49:03.048 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files
2015-05-05_19:49:03.049 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Process annotated classes
2015-05-05_19:49:03.052 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_19:49:03.067 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.QueryBinder - Binding named query: loadPersonalTrainers => from Personaltrainers
2015-05-05_19:49:03.075 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2015-05-05_19:49:03.077 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2015-05-05_19:49:03.083 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Import with entity name Personaltrainers
2015-05-05_19:49:03.086 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Bind entity com.taylan.persistence.DAO.Personaltrainers on table personaltrainers
2015-05-05_19:49:03.109 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=idpersonalTrainers, insertable=true, updatable=true, unique=true}
2015-05-05_19:49:03.113 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property idpersonalTrainers with lazy=false
2015-05-05_19:49:03.116 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for idpersonalTrainers
2015-05-05_19:49:03.118 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property idpersonalTrainers
2015-05-05_19:49:03.121 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=contact, insertable=true, updatable=true, unique=false}
2015-05-05_19:49:03.122 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property contact with lazy=false
2015-05-05_19:49:03.125 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for contact
2015-05-05_19:49:03.125 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property contact
2015-05-05_19:49:03.126 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=email, insertable=true, updatable=true, unique=false}
2015-05-05_19:49:03.126 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2015-05-05_19:49:03.126 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for email
2015-05-05_19:49:03.126 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property email
2015-05-05_19:49:03.126 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=experience, insertable=true, updatable=true, unique=false}
2015-05-05_19:49:03.126 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property experience with lazy=false
2015-05-05_19:49:03.126 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for experience
2015-05-05_19:49:03.127 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property experience
2015-05-05_19:49:03.127 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=name, insertable=true, updatable=true, unique=false}
2015-05-05_19:49:03.127 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2015-05-05_19:49:03.127 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for name
2015-05-05_19:49:03.127 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property name
2015-05-05_19:49:03.129 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for idpersonalTrainers
2015-05-05_19:49:03.129 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for contact
2015-05-05_19:49:03.133 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for email
2015-05-05_19:49:03.133 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for experience
2015-05-05_19:49:03.133 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2015-05-05_19:49:03.134 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
2015-05-05_19:49:03.135 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_19:49:03.135 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_19:49:03.135 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing collection mappings
2015-05-05_19:49:03.135 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
2015-05-05_19:49:03.135 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing association property references
2015-05-05_19:49:03.135 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints
2015-05-05_19:49:03.144 [JavaFX Application Thread] WARN  o.h.s.j.c.i.ConnectionProviderInitiator - HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
2015-05-05_19:49:03.146 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2015-05-05_19:49:03.149 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20
2015-05-05_19:49:03.150 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000006: Autocommit mode: false
2015-05-05_19:49:03.150 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/sportclubsystem]
2015-05-05_19:49:03.150 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000046: Connection properties: {user=root, password=root}
2015-05-05_19:49:03.168 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Opening new JDBC connection
2015-05-05_19:49:03.412 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Created connection to: jdbc:mysql://localhost:3306/sportclubsystem, Isolation Level: 4
2015-05-05_19:49:03.413 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-05-05_19:49:03.413 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2015-05-05_19:49:03.413 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - JDBC version : 3.0
2015-05-05_19:49:03.426 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_19:49:03.433 [JavaFX Application Thread] INFO  o.h.e.j.internal.LobCreatorBuilder - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2015-05-05_19:49:03.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
2015-05-05_19:49:03.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
2015-05-05_19:49:03.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
2015-05-05_19:49:03.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
2015-05-05_19:49:03.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
2015-05-05_19:49:03.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
2015-05-05_19:49:03.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
2015-05-05_19:49:03.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
2015-05-05_19:49:03.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Connection release mode: auto
2015-05-05_19:49:03.449 [JavaFX Application Thread] INFO  o.h.e.t.i.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2015-05-05_19:49:03.451 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
2015-05-05_19:49:03.451 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
2015-05-05_19:49:03.451 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
2015-05-05_19:49:03.452 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
2015-05-05_19:49:03.452 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
2015-05-05_19:49:03.452 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2015-05-05_19:49:03.453 [JavaFX Application Thread] INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2015-05-05_19:49:03.454 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
2015-05-05_19:49:03.454 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
2015-05-05_19:49:03.454 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
2015-05-05_19:49:03.454 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query cache: disabled
2015-05-05_19:49:03.454 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2015-05-05_19:49:03.455 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2015-05-05_19:49:03.455 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
2015-05-05_19:49:03.455 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
2015-05-05_19:49:03.458 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Statistics: disabled
2015-05-05_19:49:03.458 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
2015-05-05_19:49:03.459 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
2015-05-05_19:49:03.459 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Named query checking : enabled
2015-05-05_19:49:03.459 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2015-05-05_19:49:03.459 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
2015-05-05_19:49:03.467 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2015-05-05_19:49:03.479 [JavaFX Application Thread] TRACE org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@f26e71
2015-05-05_19:49:03.480 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2015-05-05_19:49:03.480 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiating session factory with properties: {javafx.version=8.0.31, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=root, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_31\jre\bin, java.vm.version=25.31-b07, hibernate.connection.username=root, user.country.format=GB, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=TR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, java.runtime.version=1.8.0_31-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javafx.runtime.version=8.0.31-b13, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_31\jre\lib\endorsed, os.arch=amd64, hibernate.c3p0.max_statements=50, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1254, hibernate.c3p0.timeout=300, java.library.path=C:\Program Files\Java\jdk1.8.0_31\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.1, user.home=C:\Users\Asus, user.timezone=Asia/Istanbul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=Cp1254, hibernate.c3p0.min_size=5, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Asus, java.class.path=C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0_31\jre, sun.java.command=com.taylan.core.MainApp, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=tr, user.language.format=en, awt.toolkit=sun.awt.windows.WToolkit, hibernate.c3p0.max_size=20, java.vm.info=mixed mode, java.version=1.8.0_31, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_31\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_31\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_31\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-05-05_19:49:03.490 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
2015-05-05_19:49:03.577 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_19:49:03.578 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idpersonalTrainers from sportclubsystem.personaltrainers where idpersonalTrainers =?
2015-05-05_19:49:03.578 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Snapshot select: select personaltr_.idpersonalTrainers, personaltr_.contact as contact0_, personaltr_.email as email0_, personaltr_.experience as experience0_, personaltr_.name as name0_ from sportclubsystem.personaltrainers personaltr_ where personaltr_.idpersonalTrainers=?
2015-05-05_19:49:03.578 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert 0: insert into sportclubsystem.personaltrainers (contact, email, experience, name, idpersonalTrainers) values (?, ?, ?, ?, ?)
2015-05-05_19:49:03.578 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update 0: update sportclubsystem.personaltrainers set contact=?, email=?, experience=?, name=? where idpersonalTrainers=?
2015-05-05_19:49:03.582 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete 0: delete from sportclubsystem.personaltrainers where idpersonalTrainers=?
2015-05-05_19:49:03.582 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Identity insert: insert into sportclubsystem.personaltrainers (contact, email, experience, name) values (?, ?, ?, ?)
2015-05-05_19:49:03.602 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [NONE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:49:03.602 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:49:03.602 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:49:03.603 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE_NOWAIT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:49:03.603 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [FORCE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:49:03.603 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? lock in share mode
2015-05-05_19:49:03.603 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_WRITE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:49:03.604 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:49:03.604 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:49:03.604 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:49:03.609 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:49:03.610 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:49:03.738 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@68980ab2
2015-05-05_19:49:03.740 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 90713105-7d10-4d4c-9669-0479d1c0a559 (<unnamed>)
2015-05-05_19:49:03.743 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2015-05-05_19:49:03.744 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiated session factory
2015-05-05_19:49:03.744 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 1 named HQL queries
2015-05-05_19:49:03.744 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking named query: loadPersonalTrainers
2015-05-05_19:49:03.772 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_19:49:03.778 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'com'
                |  |  |  \-[IDENT] Node: 'taylan'
                |  |  \-[IDENT] Node: 'persistence'
                |  \-[IDENT] Node: 'DAO'
                \-[IDENT] Node: 'Personaltrainers'

2015-05-05_19:49:03.778 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_19:49:03.796 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2015-05-05_19:49:03.808 [JavaFX Application Thread] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.taylan.persistence.DAO.Personaltrainers (<no alias>) -> personaltr0_
2015-05-05_19:49:03.809 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2015-05-05_19:49:03.809 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} sportclubsystem.personaltrainers personaltr0_ ) )
2015-05-05_19:49:03.812 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2015-05-05_19:49:03.816 [JavaFX Application Thread] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [sportclubsystem.personaltrainers personaltr0_]
2015-05-05_19:49:03.816 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2015-05-05_19:49:03.817 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (sportclubsystem.personaltrainers)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'personaltr0_.idpersonalTrainers as idperson1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}}
    |  \-[SQL_TOKEN] SqlFragment: 'personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[personaltr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'sportclubsystem.personaltrainers personaltr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}

2015-05-05_19:49:03.818 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_19:49:03.828 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_19:49:03.828 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:49:03.828 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_19:49:03.833 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 0 named SQL queries
2015-05-05_19:49:03.839 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2015-05-05_19:49:03.875 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:49:03.875 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:49:03.875 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:49:03.875 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:49:03.943 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:49:03.986 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:49:03.988 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:49:03.989 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:03.995 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:49:03.996 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:49:03.996 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:49:03.999 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:49:04.000 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:49:04.001 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:49:04.001 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:04.001 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:49:04.001 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:49:04.001 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:49:04.001 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:49:04.001 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:49:04.001 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:49:04.002 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:04.002 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:49:04.002 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:49:04.002 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:49:04.002 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:49:04.003 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:04.008 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:04.009 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:04.009 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:04.009 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:04.009 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:04.010 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:49:04.010 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:49:04.011 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:49:05.868 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:49:05.868 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:49:05.868 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:49:05.868 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:49:05.868 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:49:05.869 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:49:05.870 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:49:05.870 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:05.873 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:49:05.873 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:49:05.873 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:49:05.873 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:49:05.873 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:49:05.874 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:49:05.874 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:05.874 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:49:05.874 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:49:05.874 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:49:05.874 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:49:05.874 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:49:05.874 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:49:05.874 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:05.875 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:49:05.875 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:49:05.878 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:49:05.878 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:49:05.879 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:05.879 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:05.879 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:05.879 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:05.879 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:05.879 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:05.879 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:49:05.879 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:49:05.879 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:49:06.940 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:49:06.940 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:49:06.940 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:49:06.940 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:49:06.941 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:49:06.944 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:49:06.945 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:49:06.945 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:06.945 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:49:06.945 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:49:06.945 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:49:06.945 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:49:06.945 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:49:06.945 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:49:06.946 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:06.946 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:49:06.946 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:49:06.946 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:49:06.946 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:49:06.946 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:49:06.947 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:49:06.950 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:06.950 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:49:06.950 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:49:06.950 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:49:06.950 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:49:06.950 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:06.951 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:06.951 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:06.951 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:06.951 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:06.951 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:06.951 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:49:06.952 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:49:06.952 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:49:07.889 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:49:07.890 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:49:07.893 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:49:07.893 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:49:07.893 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:49:07.894 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:49:07.894 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:49:07.895 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:07.895 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:49:07.895 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:49:07.895 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:49:07.895 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:49:07.895 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:49:07.895 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:49:07.895 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:07.895 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:49:07.896 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:49:07.896 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:49:07.901 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:49:07.901 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:49:07.901 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:49:07.901 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:07.901 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:49:07.902 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:49:07.902 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:49:07.902 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:49:07.902 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:07.902 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:07.902 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:07.902 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:07.903 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:07.903 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:07.903 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:49:07.903 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:49:07.906 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:49:08.680 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:49:08.680 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:49:08.680 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:49:08.680 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:49:08.680 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:49:08.681 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:49:08.681 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:49:08.681 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:08.681 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:49:08.682 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:49:08.682 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:49:08.682 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:49:08.682 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:49:08.684 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:49:08.684 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:08.688 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:49:08.688 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:49:08.688 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:49:08.688 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:49:08.688 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:49:08.688 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:49:08.688 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:08.689 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:49:08.689 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:49:08.689 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:49:08.689 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:49:08.689 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:08.689 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:49:08.689 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:08.689 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:49:08.689 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:08.692 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:49:08.693 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:49:08.693 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:49:08.693 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:52:32.529 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@734d5e27
2015-05-05_19:52:32.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@734d5e27
2015-05-05_19:52:32.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@734d5e27
2015-05-05_19:52:32.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5b8724c9
2015-05-05_19:52:32.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f297694
2015-05-05_19:52:32.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@383c2b0e
2015-05-05_19:52:32.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@26b00e5b
2015-05-05_19:52:32.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@26b00e5b
2015-05-05_19:52:32.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@26b00e5b
2015-05-05_19:52:32.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@723b5d65
2015-05-05_19:52:32.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@723b5d65
2015-05-05_19:52:32.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@723b5d65
2015-05-05_19:52:32.544 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@707a1e46
2015-05-05_19:52:32.544 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@707a1e46
2015-05-05_19:52:32.545 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@707a1e46
2015-05-05_19:52:32.547 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@681b89c
2015-05-05_19:52:32.547 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@681b89c
2015-05-05_19:52:32.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@681b89c
2015-05-05_19:52:32.555 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7a86578d
2015-05-05_19:52:32.556 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7a86578d
2015-05-05_19:52:32.556 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7a86578d
2015-05-05_19:52:32.559 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@41ac6e3d
2015-05-05_19:52:32.559 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@41ac6e3d
2015-05-05_19:52:32.559 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@41ac6e3d
2015-05-05_19:52:32.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@59c948b5
2015-05-05_19:52:32.563 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@59c948b5
2015-05-05_19:52:32.563 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59c948b5
2015-05-05_19:52:32.566 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@323fe5af
2015-05-05_19:52:32.566 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@323fe5af
2015-05-05_19:52:32.568 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@780464d6
2015-05-05_19:52:32.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@780464d6
2015-05-05_19:52:32.571 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@71b1d6e6
2015-05-05_19:52:32.571 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@71b1d6e6
2015-05-05_19:52:32.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@9ffac9b
2015-05-05_19:52:32.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@9ffac9b
2015-05-05_19:52:32.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@514914b1
2015-05-05_19:52:32.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@514914b1
2015-05-05_19:52:32.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@598a0bb7
2015-05-05_19:52:32.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@598a0bb7
2015-05-05_19:52:32.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@138fb89e
2015-05-05_19:52:32.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@138fb89e
2015-05-05_19:52:32.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@138fb89e
2015-05-05_19:52:32.591 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@473675d5
2015-05-05_19:52:32.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@54ce24c8
2015-05-05_19:52:32.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@54ce24c8
2015-05-05_19:52:32.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@54ce24c8
2015-05-05_19:52:32.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a4bac49
2015-05-05_19:52:32.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1b058666
2015-05-05_19:52:32.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1b058666
2015-05-05_19:52:32.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@33661877
2015-05-05_19:52:32.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33661877
2015-05-05_19:52:32.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d317d7c
2015-05-05_19:52:32.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d317d7c
2015-05-05_19:52:32.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4d58cf95
2015-05-05_19:52:32.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d58cf95
2015-05-05_19:52:32.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@589a454f
2015-05-05_19:52:32.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@589a454f
2015-05-05_19:52:32.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b66f3ef
2015-05-05_19:52:32.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4666ea0f
2015-05-05_19:52:32.614 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@69ea5e64
2015-05-05_19:52:32.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@69ea5e64
2015-05-05_19:52:32.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@69ea5e64
2015-05-05_19:52:32.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2190eaf2
2015-05-05_19:52:32.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2190eaf2
2015-05-05_19:52:32.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2190eaf2
2015-05-05_19:52:32.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58924f80
2015-05-05_19:52:32.623 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@e001417
2015-05-05_19:52:32.623 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@e001417
2015-05-05_19:52:32.623 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@e001417
2015-05-05_19:52:32.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7877e76e
2015-05-05_19:52:32.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7877e76e
2015-05-05_19:52:32.626 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7877e76e
2015-05-05_19:52:32.627 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@329acc96
2015-05-05_19:52:32.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@16db802d
2015-05-05_19:52:32.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16db802d
2015-05-05_19:52:32.704 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2760caa8
2015-05-05_19:52:32.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7ea566a0
2015-05-05_19:52:32.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7ea566a0
2015-05-05_19:52:32.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@40413419
2015-05-05_19:52:32.711 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3053c1ea
2015-05-05_19:52:32.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2c48c62c
2015-05-05_19:52:32.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c48c62c
2015-05-05_19:52:32.721 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@418b43c5
2015-05-05_19:52:32.724 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2b98947e
2015-05-05_19:52:32.724 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@430a489
2015-05-05_19:52:32.724 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e811b0f
2015-05-05_19:52:32.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@550ffc71
2015-05-05_19:52:32.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3adbb9ca
2015-05-05_19:52:32.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3bce46f4
2015-05-05_19:52:32.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d517be1
2015-05-05_19:52:32.750 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-05_19:52:32.757 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-05_19:52:32.760 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-05_19:52:32.762 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-05_19:52:32.777 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-05_19:52:32.778 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-05_19:52:32.779 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_19:52:32.784 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-05_19:52:32.785 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-05_19:52:32.786 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-05_19:52:32.787 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-05_19:52:32.788 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-05_19:52:32.789 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-05_19:52:32.789 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-05_19:52:32.790 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-05_19:52:32.791 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-05_19:52:32.792 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-05_19:52:32.793 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-05_19:52:32.794 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-05_19:52:32.796 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-05_19:52:32.797 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-05_19:52:32.829 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-05_19:52:32.829 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-05_19:52:32.833 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-05_19:52:32.834 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-05_19:52:32.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.driver_class=com.mysql.jdbc.Driver
2015-05-05_19:52:32.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.password=root
2015-05-05_19:52:32.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem
2015-05-05_19:52:32.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.connection.username=root
2015-05-05_19:52:32.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_19:52:32.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - show_sql=true
2015-05-05_19:52:32.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.min_size=5
2015-05-05_19:52:32.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_size=20
2015-05-05_19:52:32.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.timeout=300
2015-05-05_19:52:32.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.max_statements=50
2015-05-05_19:52:32.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - hibernate.c3p0.idle_test_period=3000
2015-05-05_19:52:32.861 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Session-factory config [null] named class [com.taylan.persistence.DAO.Personaltrainers] for mapping
2015-05-05_19:52:32.871 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000041: Configured SessionFactory: null
2015-05-05_19:52:32.871 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Properties: {javafx.version=8.0.31, hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_31\jre\bin, java.vm.version=25.31-b07, hibernate.connection.username=root, user.country.format=GB, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=TR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, java.runtime.version=1.8.0_31-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javafx.runtime.version=8.0.31-b13, hibernate.c3p0.max_statements=50, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_31\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1254, hibernate.c3p0.timeout=300, java.library.path=C:\Program Files\Java\jdk1.8.0_31\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.1, user.home=C:\Users\Asus, user.timezone=Asia/Istanbul, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1254, java.specification.version=1.8, hibernate.c3p0.min_size=5, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, java.class.path=C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar, user.name=Asus, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.java.command=com.taylan.core.MainApp, java.home=C:\Program Files\Java\jdk1.8.0_31\jre, sun.arch.data.model=64, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, user.language=tr, java.specification.vendor=Oracle Corporation, user.language.format=en, hibernate.c3p0.max_size=20, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_31, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_31\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_31\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_31\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-05-05_19:52:32.884 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2015-05-05_19:52:32.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
2015-05-05_19:52:32.959 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing hbm.xml files
2015-05-05_19:52:32.959 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Process annotated classes
2015-05-05_19:52:32.965 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_19:52:32.989 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.QueryBinder - Binding named query: loadPersonalTrainers => from Personaltrainers
2015-05-05_19:52:33.002 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2015-05-05_19:52:33.005 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2015-05-05_19:52:33.015 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Import with entity name Personaltrainers
2015-05-05_19:52:33.021 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder - Bind entity com.taylan.persistence.DAO.Personaltrainers on table personaltrainers
2015-05-05_19:52:33.060 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=idpersonalTrainers, insertable=true, updatable=true, unique=true}
2015-05-05_19:52:33.068 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property idpersonalTrainers with lazy=false
2015-05-05_19:52:33.072 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for idpersonalTrainers
2015-05-05_19:52:33.075 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property idpersonalTrainers
2015-05-05_19:52:33.081 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=contact, insertable=true, updatable=true, unique=false}
2015-05-05_19:52:33.082 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property contact with lazy=false
2015-05-05_19:52:33.086 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for contact
2015-05-05_19:52:33.086 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property contact
2015-05-05_19:52:33.086 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=email, insertable=true, updatable=true, unique=false}
2015-05-05_19:52:33.086 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2015-05-05_19:52:33.087 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for email
2015-05-05_19:52:33.087 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property email
2015-05-05_19:52:33.087 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=experience, insertable=true, updatable=true, unique=false}
2015-05-05_19:52:33.087 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property experience with lazy=false
2015-05-05_19:52:33.088 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for experience
2015-05-05_19:52:33.088 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property experience
2015-05-05_19:52:33.088 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(sportclubsystem.personaltrainers), mappingColumn=name, insertable=true, updatable=true, unique=false}
2015-05-05_19:52:33.088 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2015-05-05_19:52:33.089 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - building SimpleValue for name
2015-05-05_19:52:33.089 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder - Building property name
2015-05-05_19:52:33.091 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for idpersonalTrainers
2015-05-05_19:52:33.092 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for contact
2015-05-05_19:52:33.097 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for email
2015-05-05_19:52:33.097 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for experience
2015-05-05_19:52:33.097 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder - Setting SimpleValue typeName for name
2015-05-05_19:52:33.098 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
2015-05-05_19:52:33.100 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_19:52:33.100 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing extends queue
2015-05-05_19:52:33.100 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing collection mappings
2015-05-05_19:52:33.101 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
2015-05-05_19:52:33.101 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing association property references
2015-05-05_19:52:33.101 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration - Processing foreign key constraints
2015-05-05_19:52:33.116 [JavaFX Application Thread] WARN  o.h.s.j.c.i.ConnectionProviderInitiator - HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
2015-05-05_19:52:33.119 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2015-05-05_19:52:33.126 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20
2015-05-05_19:52:33.126 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000006: Autocommit mode: false
2015-05-05_19:52:33.127 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/sportclubsystem]
2015-05-05_19:52:33.127 [JavaFX Application Thread] INFO  o.h.s.j.c.i.DriverManagerConnectionProviderImpl - HHH000046: Connection properties: {user=root, password=root}
2015-05-05_19:52:33.148 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Opening new JDBC connection
2015-05-05_19:52:33.460 [JavaFX Application Thread] DEBUG o.h.s.j.c.i.DriverManagerConnectionProviderImpl - Created connection to: jdbc:mysql://localhost:3306/sportclubsystem, Isolation Level: 4
2015-05-05_19:52:33.461 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-05-05_19:52:33.461 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2015-05-05_19:52:33.461 [JavaFX Application Thread] DEBUG o.h.e.jdbc.internal.JdbcServicesImpl - JDBC version : 3.0
2015-05-05_19:52:33.481 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLInnoDBDialect
2015-05-05_19:52:33.489 [JavaFX Application Thread] INFO  o.h.e.j.internal.LobCreatorBuilder - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2015-05-05_19:52:33.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
2015-05-05_19:52:33.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
2015-05-05_19:52:33.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
2015-05-05_19:52:33.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
2015-05-05_19:52:33.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
2015-05-05_19:52:33.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
2015-05-05_19:52:33.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
2015-05-05_19:52:33.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
2015-05-05_19:52:33.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Connection release mode: auto
2015-05-05_19:52:33.510 [JavaFX Application Thread] INFO  o.h.e.t.i.TransactionFactoryInitiator - HHH000399: Using default transaction strategy (direct JDBC transactions)
2015-05-05_19:52:33.515 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
2015-05-05_19:52:33.515 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
2015-05-05_19:52:33.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
2015-05-05_19:52:33.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
2015-05-05_19:52:33.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
2015-05-05_19:52:33.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2015-05-05_19:52:33.519 [JavaFX Application Thread] INFO  o.h.h.i.a.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
2015-05-05_19:52:33.520 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
2015-05-05_19:52:33.520 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
2015-05-05_19:52:33.520 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
2015-05-05_19:52:33.520 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Query cache: disabled
2015-05-05_19:52:33.521 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2015-05-05_19:52:33.522 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2015-05-05_19:52:33.523 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
2015-05-05_19:52:33.523 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
2015-05-05_19:52:33.530 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Statistics: disabled
2015-05-05_19:52:33.530 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
2015-05-05_19:52:33.530 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
2015-05-05_19:52:33.531 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Named query checking : enabled
2015-05-05_19:52:33.531 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2015-05-05_19:52:33.531 [JavaFX Application Thread] DEBUG org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
2015-05-05_19:52:33.546 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2015-05-05_19:52:33.556 [JavaFX Application Thread] TRACE org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@16598928
2015-05-05_19:52:33.558 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2015-05-05_19:52:33.559 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiating session factory with properties: {javafx.version=8.0.31, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=root, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_31\jre\bin, java.vm.version=25.31-b07, hibernate.connection.username=root, user.country.format=GB, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=TR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Asus\Desktop\SportClubRealLoginSystem, java.runtime.version=1.8.0_31-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javafx.runtime.version=8.0.31-b13, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_31\jre\lib\endorsed, os.arch=amd64, hibernate.c3p0.max_statements=50, java.io.tmpdir=C:\Users\Asus\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1254, hibernate.c3p0.timeout=300, java.library.path=C:\Program Files\Java\jdk1.8.0_31\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;%M2_HOME%\bin;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\Microsoft Shared\Windows Live;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\2.0\bin\x64;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.2 & MySQL Utilities 1.5.2 1.5\Doctrine extensions for PHP\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Users\Asus\AppData\Roaming\Dashlane\bin\Firefox_Extension\{442718d9-475e-452a-b3e1-fb1ee16b8e9f}\components;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.1, user.home=C:\Users\Asus, user.timezone=Asia/Istanbul, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=Cp1254, hibernate.c3p0.min_size=5, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Asus, java.class.path=C:\Users\Asus\Desktop\SportClubRealLoginSystem\target\classes;C:\Users\Asus\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\Asus\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\Asus\.m2\repository\javax\persistence\persistence-api\1.0\persistence-api-1.0.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Asus\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Asus\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Asus\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Asus\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Asus\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Asus\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Asus\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-core\0.9.28\logback-core-0.9.28.jar;C:\Users\Asus\.m2\repository\ch\qos\logback\logback-classic\0.9.28\logback-classic-0.9.28.jar;C:\Users\Asus\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\Asus\.m2\repository\org\hibernate\hibernate-c3p0\3.6.3.Final\hibernate-c3p0-3.6.3.Final.jar;C:\Users\Asus\.m2\repository\c3p0\c3p0\0.9.1\c3p0-0.9.1.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0_31\jre, sun.java.command=com.taylan.core.MainApp, hibernate.connection.url=jdbc:mysql://localhost:3306/sportclubsystem, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=tr, user.language.format=en, awt.toolkit=sun.awt.windows.WToolkit, hibernate.c3p0.max_size=20, java.vm.info=mixed mode, java.version=1.8.0_31, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_31\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_31\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_31\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_31\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-05-05_19:52:33.579 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
2015-05-05_19:52:33.714 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.taylan.persistence.DAO.Personaltrainers
2015-05-05_19:52:33.714 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select idpersonalTrainers from sportclubsystem.personaltrainers where idpersonalTrainers =?
2015-05-05_19:52:33.714 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Snapshot select: select personaltr_.idpersonalTrainers, personaltr_.contact as contact0_, personaltr_.email as email0_, personaltr_.experience as experience0_, personaltr_.name as name0_ from sportclubsystem.personaltrainers personaltr_ where personaltr_.idpersonalTrainers=?
2015-05-05_19:52:33.714 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert 0: insert into sportclubsystem.personaltrainers (contact, email, experience, name, idpersonalTrainers) values (?, ?, ?, ?, ?)
2015-05-05_19:52:33.715 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Update 0: update sportclubsystem.personaltrainers set contact=?, email=?, experience=?, name=? where idpersonalTrainers=?
2015-05-05_19:52:33.720 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete 0: delete from sportclubsystem.personaltrainers where idpersonalTrainers=?
2015-05-05_19:52:33.720 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister -  Identity insert: insert into sportclubsystem.personaltrainers (contact, email, experience, name) values (?, ?, ?, ?)
2015-05-05_19:52:33.740 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [NONE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:52:33.741 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:52:33.741 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:52:33.741 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [UPGRADE_NOWAIT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:52:33.741 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [FORCE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:52:33.742 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_READ]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? lock in share mode
2015-05-05_19:52:33.743 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_WRITE]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:52:33.743 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [PESSIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=? for update
2015-05-05_19:52:33.743 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:52:33.744 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for entity com.taylan.persistence.DAO.Personaltrainers [OPTIMISTIC_FORCE_INCREMENT]: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:52:33.751 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:52:33.752 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.taylan.persistence.DAO.Personaltrainers: select personaltr0_.idpersonalTrainers as idperson1_0_0_, personaltr0_.contact as contact0_0_, personaltr0_.email as email0_0_, personaltr0_.experience as experience0_0_, personaltr0_.name as name0_0_ from sportclubsystem.personaltrainers personaltr0_ where personaltr0_.idpersonalTrainers=?
2015-05-05_19:52:33.915 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@54336c82
2015-05-05_19:52:33.919 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 75a6ab86-1e9b-4d63-8954-eeee58f3641e (<unnamed>)
2015-05-05_19:52:33.924 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2015-05-05_19:52:33.924 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Instantiated session factory
2015-05-05_19:52:33.925 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 1 named HQL queries
2015-05-05_19:52:33.926 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking named query: loadPersonalTrainers
2015-05-05_19:52:33.963 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - parse() - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_19:52:33.969 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'com'
                |  |  |  \-[IDENT] Node: 'taylan'
                |  |  \-[IDENT] Node: 'persistence'
                |  \-[IDENT] Node: 'DAO'
                \-[IDENT] Node: 'Personaltrainers'

2015-05-05_19:52:33.970 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_19:52:33.993 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
2015-05-05_19:52:34.007 [JavaFX Application Thread] DEBUG o.h.h.internal.ast.tree.FromElement - FromClause{level=1} : com.taylan.persistence.DAO.Personaltrainers (<no alias>) -> personaltr0_
2015-05-05_19:52:34.008 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2015-05-05_19:52:34.008 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} sportclubsystem.personaltrainers personaltr0_ ) )
2015-05-05_19:52:34.013 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
2015-05-05_19:52:34.018 [JavaFX Application Thread] DEBUG o.h.h.i.ast.util.JoinProcessor - Using FROM fragment [sportclubsystem.personaltrainers personaltr0_]
2015-05-05_19:52:34.018 [JavaFX Application Thread] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2015-05-05_19:52:34.019 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (sportclubsystem.personaltrainers)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'personaltr0_.idpersonalTrainers as idperson1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}}
    |  \-[SQL_TOKEN] SqlFragment: 'personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[personaltr0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'sportclubsystem.personaltrainers personaltr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=sportclubsystem.personaltrainers,tableAlias=personaltr0_,origin=null,columns={,className=com.taylan.persistence.DAO.Personaltrainers}}

2015-05-05_19:52:34.020 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_19:52:34.036 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - HQL: from com.taylan.persistence.DAO.Personaltrainers
2015-05-05_19:52:34.036 [JavaFX Application Thread] DEBUG o.h.h.i.ast.QueryTranslatorImpl - SQL: select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:52:34.037 [JavaFX Application Thread] DEBUG o.h.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
2015-05-05_19:52:34.043 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl - Checking 0 named SQL queries
2015-05-05_19:52:34.050 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2015-05-05_19:52:34.109 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:52:34.110 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:52:34.110 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:52:34.110 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:52:34.221 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:52:34.274 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:52:34.277 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:52:34.279 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:34.288 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:52:34.289 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:52:34.289 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:52:34.294 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:52:34.296 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:52:34.296 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:52:34.296 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:34.296 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:52:34.297 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:52:34.297 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:52:34.297 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:52:34.297 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:52:34.297 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:52:34.297 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:34.297 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:52:34.298 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:52:34.298 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:52:34.298 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:52:34.299 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:34.307 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:34.307 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:34.307 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:34.307 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:34.308 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:34.310 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:52:34.310 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:52:34.310 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:52:36.267 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:52:36.267 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:52:36.267 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:52:36.267 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:52:36.268 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:52:36.269 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:52:36.269 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:52:36.270 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:36.275 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:52:36.275 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:52:36.275 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:52:36.275 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:52:36.275 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:52:36.276 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:52:36.276 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:36.276 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:52:36.276 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:52:36.276 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:52:36.276 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:52:36.276 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:52:36.276 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:52:36.277 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:36.277 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:52:36.277 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:52:36.285 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:52:36.285 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:52:36.286 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:36.286 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:36.286 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:36.286 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:36.286 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:36.286 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:36.286 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:52:36.287 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:52:36.287 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:52:37.631 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:52:37.631 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:52:37.631 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:52:37.631 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:52:37.632 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:52:37.638 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:52:37.638 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:52:37.638 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:37.638 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:52:37.638 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:52:37.639 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:52:37.639 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:52:37.639 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:52:37.639 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:52:37.639 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:37.639 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:52:37.640 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:52:37.640 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:52:37.640 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:52:37.640 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:52:37.641 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:52:37.645 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:37.645 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:52:37.645 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:52:37.645 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:52:37.645 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:52:37.646 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:37.646 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:37.646 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:37.646 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:37.646 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:37.646 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:37.647 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:52:37.647 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:52:37.647 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:52:38.568 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:52:38.568 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:52:38.583 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:52:38.583 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:52:38.583 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:52:38.584 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:52:38.584 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:52:38.585 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:38.585 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:52:38.585 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:52:38.585 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:52:38.585 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:52:38.585 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:52:38.585 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:52:38.586 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:38.586 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:52:38.586 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:52:38.586 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:52:38.590 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:52:38.591 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:52:38.591 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:52:38.591 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:38.591 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:52:38.591 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:52:38.592 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:52:38.592 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:52:38.592 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:38.593 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:38.593 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:38.593 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:38.593 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:38.593 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:38.593 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:52:38.593 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:52:38.596 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:52:39.396 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:52:39.396 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:52:39.396 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:52:39.396 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:52:39.396 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:52:39.397 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:52:39.398 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:52:39.398 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:39.398 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:52:39.398 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:52:39.398 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:52:39.398 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:52:39.399 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:52:39.399 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:52:39.399 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:39.402 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:52:39.403 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:52:39.403 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:52:39.403 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:52:39.403 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:52:39.403 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:52:39.403 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:39.404 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:52:39.404 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:52:39.404 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:52:39.404 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:52:39.405 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:39.405 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:39.405 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:39.405 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:39.405 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:39.409 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:39.409 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:52:39.409 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:52:39.409 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:52:40.359 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:52:40.359 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:52:40.359 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:52:40.359 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:52:40.359 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:52:40.360 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:52:40.360 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:52:40.360 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:40.361 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:52:40.361 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:52:40.361 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:52:40.361 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:52:40.364 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:52:40.364 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:52:40.364 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:40.364 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:52:40.364 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:52:40.364 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:52:40.364 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:52:40.365 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:52:40.365 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:52:40.365 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:40.365 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:52:40.365 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:52:40.365 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:52:40.365 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:52:40.365 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:40.366 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:40.369 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:40.369 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:40.369 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:40.369 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:40.369 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:52:40.369 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:52:40.369 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:52:41.816 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:52:41.816 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:52:41.816 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:52:41.816 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:52:41.817 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:52:41.817 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:52:41.817 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:52:41.818 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:41.818 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:52:41.820 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:52:41.821 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:52:41.821 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:52:41.821 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:52:41.821 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:52:41.821 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:41.821 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:52:41.821 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:52:41.821 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:52:41.821 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:52:41.821 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:52:41.822 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:52:41.822 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:41.822 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:52:41.822 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:52:41.822 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:52:41.825 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:52:41.825 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:41.825 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:52:41.825 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:41.825 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:52:41.825 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:41.825 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:52:41.826 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:52:41.826 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:52:41.826 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:53:02.548 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:53:02.548 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:53:02.548 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:53:02.548 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:53:02.548 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:53:02.549 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:53:02.557 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:53:02.557 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:53:02.557 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:53:02.557 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:53:02.558 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:53:02.558 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:53:02.558 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:53:02.558 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:53:02.558 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:53:02.558 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:53:02.558 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:53:02.558 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:53:02.558 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:53:02.558 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:53:02.558 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:53:02.559 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:53:02.569 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:53:02.570 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:53:02.570 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:53:02.570 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:53:02.570 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:53:02.570 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:53:02.570 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:53:02.570 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:53:02.570 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:53:02.571 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:53:02.571 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:53:02.571 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:53:02.571 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-05_19:53:04.955 [JavaFX Application Thread] DEBUG o.h.e.t.spi.AbstractTransactionImpl - begin
2015-05-05_19:53:04.955 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtaining JDBC connection
2015-05-05_19:53:04.955 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Obtained JDBC connection
2015-05-05_19:53:04.959 [JavaFX Application Thread] DEBUG o.h.e.t.i.jdbc.JdbcTransaction - initial autocommit status: false
2015-05-05_19:53:04.959 [JavaFX Application Thread] DEBUG org.hibernate.SQL - select personaltr0_.idpersonalTrainers as idperson1_0_, personaltr0_.contact as contact0_, personaltr0_.email as email0_, personaltr0_.experience as experience0_, personaltr0_.name as name0_ from sportclubsystem.personaltrainers personaltr0_
2015-05-05_19:53:04.960 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 0
2015-05-05_19:53:04.960 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [1] as column [idperson1_0_]
2015-05-05_19:53:04.960 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:53:04.960 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+905384754330] as column [contact0_]
2015-05-05_19:53:04.960 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [taylankurt34@gmail.com] as column [email0_]
2015-05-05_19:53:04.960 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [110] as column [experience0_]
2015-05-05_19:53:04.960 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Taylan Kurt] as column [name0_]
2015-05-05_19:53:04.960 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 1
2015-05-05_19:53:04.961 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [2] as column [idperson1_0_]
2015-05-05_19:53:04.961 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:53:04.961 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+467482943323] as column [contact0_]
2015-05-05_19:53:04.961 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [rolandas@gmail.com] as column [email0_]
2015-05-05_19:53:04.961 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [12] as column [experience0_]
2015-05-05_19:53:04.961 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Rolandas Janulis] as column [name0_]
2015-05-05_19:53:04.964 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result set row: 2
2015-05-05_19:53:04.964 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [3] as column [idperson1_0_]
2015-05-05_19:53:04.964 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:53:04.964 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [+461331235413] as column [contact0_]
2015-05-05_19:53:04.964 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [victoras@gmail.com] as column [email0_]
2015-05-05_19:53:04.964 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [21] as column [experience0_]
2015-05-05_19:53:04.964 [JavaFX Application Thread] TRACE o.h.t.descriptor.sql.BasicExtractor - Found [Viktoras Staisiunas] as column [name0_]
2015-05-05_19:53:04.964 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:53:04.964 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#1]
2015-05-05_19:53:04.964 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:53:04.965 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#2]
2015-05-05_19:53:04.965 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Resolving associations for [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:53:04.965 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad - Done materializing entity [com.taylan.persistence.DAO.Personaltrainers#3]
2015-05-05_19:53:04.965 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Releasing JDBC connection
2015-05-05_19:53:04.965 [JavaFX Application Thread] DEBUG o.h.e.j.i.LogicalConnectionImpl - Released JDBC connection
2015-05-05_19:53:04.965 [JavaFX Application Thread] DEBUG o.h.e.j.i.p.ConnectionProxyHandler - HHH000163: Logical connection releasing its physical connection
2015-05-10_15:53:14.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@24d4675
2015-05-10_15:53:14.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@24d4675
2015-05-10_15:53:14.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@24d4675
2015-05-10_15:53:14.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71896d24
2015-05-10_15:53:14.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@595d6a0c
2015-05-10_15:53:14.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@359650d9
2015-05-10_15:53:14.035 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@428d820
2015-05-10_15:53:14.035 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@428d820
2015-05-10_15:53:14.036 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@428d820
2015-05-10_15:53:14.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@dba4aec
2015-05-10_15:53:14.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@dba4aec
2015-05-10_15:53:14.038 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@dba4aec
2015-05-10_15:53:14.039 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@489855c6
2015-05-10_15:53:14.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@489855c6
2015-05-10_15:53:14.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@489855c6
2015-05-10_15:53:14.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@46d47442
2015-05-10_15:53:14.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@46d47442
2015-05-10_15:53:14.057 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@46d47442
2015-05-10_15:53:14.059 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@40956c00
2015-05-10_15:53:14.059 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@40956c00
2015-05-10_15:53:14.060 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@40956c00
2015-05-10_15:53:14.063 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3a361ee9
2015-05-10_15:53:14.064 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3a361ee9
2015-05-10_15:53:14.064 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3a361ee9
2015-05-10_15:53:14.067 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4adcc64f
2015-05-10_15:53:14.068 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4adcc64f
2015-05-10_15:53:14.068 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4adcc64f
2015-05-10_15:53:14.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fda21a1
2015-05-10_15:53:14.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fda21a1
2015-05-10_15:53:14.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4919931b
2015-05-10_15:53:14.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4919931b
2015-05-10_15:53:14.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1013315a
2015-05-10_15:53:14.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1013315a
2015-05-10_15:53:14.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1534f328
2015-05-10_15:53:14.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1534f328
2015-05-10_15:53:14.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@46ee4d20
2015-05-10_15:53:14.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@46ee4d20
2015-05-10_15:53:14.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4ba5fc9f
2015-05-10_15:53:14.203 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ba5fc9f
2015-05-10_15:53:14.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1bacdb8
2015-05-10_15:53:14.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1bacdb8
2015-05-10_15:53:14.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1bacdb8
2015-05-10_15:53:14.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4686dddf
2015-05-10_15:53:14.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6eec2633
2015-05-10_15:53:14.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6eec2633
2015-05-10_15:53:14.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6eec2633
2015-05-10_15:53:14.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5608ac80
2015-05-10_15:53:14.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7cb9c067
2015-05-10_15:53:14.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7cb9c067
2015-05-10_15:53:14.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@140fc643
2015-05-10_15:53:14.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@140fc643
2015-05-10_15:53:14.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@51bf8efb
2015-05-10_15:53:14.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@51bf8efb
2015-05-10_15:53:14.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@57da6eaa
2015-05-10_15:53:14.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@57da6eaa
2015-05-10_15:53:14.223 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@525f35e3
2015-05-10_15:53:14.223 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@525f35e3
2015-05-10_15:53:14.224 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@74bcc2c1
2015-05-10_15:53:14.224 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@679e03d
2015-05-10_15:53:14.226 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@37bd9502
2015-05-10_15:53:14.226 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@37bd9502
2015-05-10_15:53:14.226 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@37bd9502
2015-05-10_15:53:14.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3414e771
2015-05-10_15:53:14.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3414e771
2015-05-10_15:53:14.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3414e771
2015-05-10_15:53:14.232 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fda3d9f
2015-05-10_15:53:14.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7bed9799
2015-05-10_15:53:14.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7bed9799
2015-05-10_15:53:14.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7bed9799
2015-05-10_15:53:14.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2eeefedb
2015-05-10_15:53:14.235 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2eeefedb
2015-05-10_15:53:14.235 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2eeefedb
2015-05-10_15:53:14.236 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4882748e
2015-05-10_15:53:14.244 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2e2d03b7
2015-05-10_15:53:14.245 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e2d03b7
2015-05-10_15:53:14.246 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6dfff6cf
2015-05-10_15:53:14.250 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@74cd5727
2015-05-10_15:53:14.250 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@74cd5727
2015-05-10_15:53:14.251 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4204fd21
2015-05-10_15:53:14.253 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@475ce9f
2015-05-10_15:53:14.256 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@305c60fc
2015-05-10_15:53:14.260 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@305c60fc
2015-05-10_15:53:14.261 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@37ef0cdc
2015-05-10_15:53:14.263 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@64e7c15d
2015-05-10_15:53:14.264 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d838fd3
2015-05-10_15:53:14.264 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@32b7f86e
2015-05-10_15:53:14.264 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7df18b08
2015-05-10_15:53:14.265 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@27c640c2
2015-05-10_15:53:14.265 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@69abefe
2015-05-10_15:53:14.265 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@be342cb
2015-05-10_15:53:14.303 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-10_15:53:14.310 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-10_15:53:14.312 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-10_15:53:14.314 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-10_15:53:14.361 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-10_15:53:14.369 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-10_15:53:14.370 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_15:53:14.374 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_15:53:14.375 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-10_15:53:14.376 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-10_15:53:14.378 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-10_15:53:14.378 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-10_15:53:14.379 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-10_15:53:14.380 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-10_15:53:14.380 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-10_15:53:14.381 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-10_15:53:14.381 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-10_15:53:14.382 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-10_15:53:14.383 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-10_15:53:14.384 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-10_15:53:14.385 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-10_15:53:14.527 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-10_15:53:14.527 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-10_15:53:14.530 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-10_15:53:14.531 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-10_15:54:09.347 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5b958609
2015-05-10_15:54:09.351 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5b958609
2015-05-10_15:54:09.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b958609
2015-05-10_15:54:09.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63e2f2d0
2015-05-10_15:54:09.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2d1e2322
2015-05-10_15:54:09.355 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a63d75e
2015-05-10_15:54:09.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@49b95dd7
2015-05-10_15:54:09.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@49b95dd7
2015-05-10_15:54:09.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@49b95dd7
2015-05-10_15:54:09.361 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4a78c68e
2015-05-10_15:54:09.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4a78c68e
2015-05-10_15:54:09.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4a78c68e
2015-05-10_15:54:09.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7153cb07
2015-05-10_15:54:09.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7153cb07
2015-05-10_15:54:09.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7153cb07
2015-05-10_15:54:09.366 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@504fdec2
2015-05-10_15:54:09.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@504fdec2
2015-05-10_15:54:09.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@504fdec2
2015-05-10_15:54:09.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@41f15423
2015-05-10_15:54:09.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@41f15423
2015-05-10_15:54:09.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@41f15423
2015-05-10_15:54:09.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@58eddc58
2015-05-10_15:54:09.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@58eddc58
2015-05-10_15:54:09.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@58eddc58
2015-05-10_15:54:09.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1b908cf8
2015-05-10_15:54:09.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1b908cf8
2015-05-10_15:54:09.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b908cf8
2015-05-10_15:54:09.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2e5eba9b
2015-05-10_15:54:09.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2e5eba9b
2015-05-10_15:54:09.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3d702379
2015-05-10_15:54:09.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3d702379
2015-05-10_15:54:09.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@23a7132f
2015-05-10_15:54:09.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@23a7132f
2015-05-10_15:54:09.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@63a64bd7
2015-05-10_15:54:09.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@63a64bd7
2015-05-10_15:54:09.396 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6352f3e3
2015-05-10_15:54:09.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6352f3e3
2015-05-10_15:54:09.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@36cb67f0
2015-05-10_15:54:09.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@36cb67f0
2015-05-10_15:54:09.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@18abc81e
2015-05-10_15:54:09.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18abc81e
2015-05-10_15:54:09.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18abc81e
2015-05-10_15:54:09.406 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@80608a8
2015-05-10_15:54:09.410 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@69fe2829
2015-05-10_15:54:09.410 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69fe2829
2015-05-10_15:54:09.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69fe2829
2015-05-10_15:54:09.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1789dd54
2015-05-10_15:54:09.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@236c70a4
2015-05-10_15:54:09.414 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@236c70a4
2015-05-10_15:54:09.419 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@47b67601
2015-05-10_15:54:09.420 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@47b67601
2015-05-10_15:54:09.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78c2bf03
2015-05-10_15:54:09.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78c2bf03
2015-05-10_15:54:09.422 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@45ada9b0
2015-05-10_15:54:09.423 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@45ada9b0
2015-05-10_15:54:09.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5aa30073
2015-05-10_15:54:09.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5aa30073
2015-05-10_15:54:09.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7409dedd
2015-05-10_15:54:09.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6b4e6877
2015-05-10_15:54:09.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@354dc691
2015-05-10_15:54:09.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@354dc691
2015-05-10_15:54:09.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@354dc691
2015-05-10_15:54:09.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1082df34
2015-05-10_15:54:09.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1082df34
2015-05-10_15:54:09.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1082df34
2015-05-10_15:54:09.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@79cacc4f
2015-05-10_15:54:09.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@11b9bab3
2015-05-10_15:54:09.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@11b9bab3
2015-05-10_15:54:09.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@11b9bab3
2015-05-10_15:54:09.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da8bc6c
2015-05-10_15:54:09.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da8bc6c
2015-05-10_15:54:09.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da8bc6c
2015-05-10_15:54:09.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@387b0cfa
2015-05-10_15:54:09.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7a11d858
2015-05-10_15:54:09.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a11d858
2015-05-10_15:54:09.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@388ad410
2015-05-10_15:54:09.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@64ecc5d8
2015-05-10_15:54:09.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@64ecc5d8
2015-05-10_15:54:09.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3d19a3a
2015-05-10_15:54:09.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@45f07193
2015-05-10_15:54:09.465 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7e686787
2015-05-10_15:54:09.470 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e686787
2015-05-10_15:54:09.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e9b1f3b
2015-05-10_15:54:09.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@13720130
2015-05-10_15:54:09.473 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@505ac2c8
2015-05-10_15:54:09.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7abed199
2015-05-10_15:54:09.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@caa7b32
2015-05-10_15:54:09.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f528016
2015-05-10_15:54:09.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9185fb6
2015-05-10_15:54:09.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5a66515
2015-05-10_15:54:09.597 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-10_15:54:09.605 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-10_15:54:09.609 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-10_15:54:09.612 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-10_15:54:09.631 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-10_15:54:09.632 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-10_15:54:09.633 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_15:54:09.636 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_15:54:09.638 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-10_15:54:09.639 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-10_15:54:09.641 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-10_15:54:09.642 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-10_15:54:09.643 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-10_15:54:09.644 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-10_15:54:09.644 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-10_15:54:09.645 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-10_15:54:09.646 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-10_15:54:09.647 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-10_15:54:09.648 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-10_15:54:09.650 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-10_15:54:09.651 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-10_15:54:09.685 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-10_15:54:09.686 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-10_15:54:09.690 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-10_15:54:09.691 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-10_15:55:31.927 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7fa2c520
2015-05-10_15:55:31.931 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7fa2c520
2015-05-10_15:55:31.932 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fa2c520
2015-05-10_15:55:31.934 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5a6ace3a
2015-05-10_15:55:31.936 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@49a1dbf
2015-05-10_15:55:31.938 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@694f5a7
2015-05-10_15:55:31.941 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@13352b65
2015-05-10_15:55:31.941 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@13352b65
2015-05-10_15:55:31.942 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@13352b65
2015-05-10_15:55:31.943 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7ec6761b
2015-05-10_15:55:31.944 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7ec6761b
2015-05-10_15:55:31.944 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ec6761b
2015-05-10_15:55:31.946 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3f3bb5d
2015-05-10_15:55:31.946 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3f3bb5d
2015-05-10_15:55:31.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3f3bb5d
2015-05-10_15:55:31.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@726fe002
2015-05-10_15:55:31.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@726fe002
2015-05-10_15:55:31.955 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@726fe002
2015-05-10_15:55:31.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4fc0409f
2015-05-10_15:55:31.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4fc0409f
2015-05-10_15:55:31.959 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fc0409f
2015-05-10_15:55:31.961 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@44f1026e
2015-05-10_15:55:31.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@44f1026e
2015-05-10_15:55:31.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44f1026e
2015-05-10_15:55:31.964 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@557506db
2015-05-10_15:55:31.965 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@557506db
2015-05-10_15:55:31.965 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@557506db
2015-05-10_15:55:31.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@17713caf
2015-05-10_15:55:31.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@17713caf
2015-05-10_15:55:31.971 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@51ac4822
2015-05-10_15:55:31.971 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@51ac4822
2015-05-10_15:55:31.973 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4828e1b1
2015-05-10_15:55:31.973 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4828e1b1
2015-05-10_15:55:31.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4f9089fe
2015-05-10_15:55:31.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4f9089fe
2015-05-10_15:55:31.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@43e2
2015-05-10_15:55:31.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@43e2
2015-05-10_15:55:31.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@199a19e2
2015-05-10_15:55:31.990 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@199a19e2
2015-05-10_15:55:31.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1fd4293
2015-05-10_15:55:31.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1fd4293
2015-05-10_15:55:31.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1fd4293
2015-05-10_15:55:31.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a65d35f
2015-05-10_15:55:32.053 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@584e9435
2015-05-10_15:55:32.053 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@584e9435
2015-05-10_15:55:32.053 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@584e9435
2015-05-10_15:55:32.055 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@495d86e1
2015-05-10_15:55:32.057 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4efcc5a3
2015-05-10_15:55:32.057 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4efcc5a3
2015-05-10_15:55:32.064 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6ec038c2
2015-05-10_15:55:32.064 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ec038c2
2015-05-10_15:55:32.066 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4167c0ab
2015-05-10_15:55:32.066 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4167c0ab
2015-05-10_15:55:32.068 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7f5415d4
2015-05-10_15:55:32.068 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7f5415d4
2015-05-10_15:55:32.071 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1903db64
2015-05-10_15:55:32.071 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1903db64
2015-05-10_15:55:32.072 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1265937d
2015-05-10_15:55:32.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@26c53c0
2015-05-10_15:55:32.076 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@393474e1
2015-05-10_15:55:32.076 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@393474e1
2015-05-10_15:55:32.076 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@393474e1
2015-05-10_15:55:32.078 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c2d846c
2015-05-10_15:55:32.078 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c2d846c
2015-05-10_15:55:32.079 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c2d846c
2015-05-10_15:55:32.084 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2f718cfd
2015-05-10_15:55:32.086 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@85d3a54
2015-05-10_15:55:32.087 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@85d3a54
2015-05-10_15:55:32.087 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@85d3a54
2015-05-10_15:55:32.089 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@41bb1b38
2015-05-10_15:55:32.089 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@41bb1b38
2015-05-10_15:55:32.090 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@41bb1b38
2015-05-10_15:55:32.091 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@12adc79b
2015-05-10_15:55:32.104 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@225e44de
2015-05-10_15:55:32.104 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@225e44de
2015-05-10_15:55:32.105 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@741a9262
2015-05-10_15:55:32.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@60241496
2015-05-10_15:55:32.112 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@60241496
2015-05-10_15:55:32.113 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@36152165
2015-05-10_15:55:32.115 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@35075315
2015-05-10_15:55:32.120 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5f89c81
2015-05-10_15:55:32.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f89c81
2015-05-10_15:55:32.126 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@74914128
2015-05-10_15:55:32.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@354cd7af
2015-05-10_15:55:32.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@12ecb89
2015-05-10_15:55:32.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@353fede7
2015-05-10_15:55:32.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4bd97269
2015-05-10_15:55:32.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@187b2512
2015-05-10_15:55:32.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6ffed717
2015-05-10_15:55:32.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25644fda
2015-05-10_15:55:32.153 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-10_15:55:32.160 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-10_15:55:32.163 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-10_15:55:32.165 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-10_15:55:32.179 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-10_15:55:32.180 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-10_15:55:32.181 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_15:55:32.184 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_15:55:32.186 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-10_15:55:32.188 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-10_15:55:32.189 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-10_15:55:32.190 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-10_15:55:32.191 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-10_15:55:32.191 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-10_15:55:32.192 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-10_15:55:32.193 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-10_15:55:32.193 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-10_15:55:32.194 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-10_15:55:32.195 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-10_15:55:32.198 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-10_15:55:32.199 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-10_15:55:32.225 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-10_15:55:32.226 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-10_15:55:32.229 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-10_15:55:32.230 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-10_15:58:18.098 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@534cc764
2015-05-10_15:58:18.102 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@534cc764
2015-05-10_15:58:18.102 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@534cc764
2015-05-10_15:58:18.104 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7563d2bd
2015-05-10_15:58:18.105 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@547fe54d
2015-05-10_15:58:18.106 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a78c68e
2015-05-10_15:58:18.108 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7153cb07
2015-05-10_15:58:18.108 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7153cb07
2015-05-10_15:58:18.108 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7153cb07
2015-05-10_15:58:18.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@504fdec2
2015-05-10_15:58:18.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@504fdec2
2015-05-10_15:58:18.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@504fdec2
2015-05-10_15:58:18.112 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@8e71922
2015-05-10_15:58:18.112 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@8e71922
2015-05-10_15:58:18.112 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@8e71922
2015-05-10_15:58:18.114 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5f7140ac
2015-05-10_15:58:18.115 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5f7140ac
2015-05-10_15:58:18.118 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f7140ac
2015-05-10_15:58:18.120 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@44fdca5d
2015-05-10_15:58:18.121 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@44fdca5d
2015-05-10_15:58:18.121 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@44fdca5d
2015-05-10_15:58:18.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3e7966f6
2015-05-10_15:58:18.126 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3e7966f6
2015-05-10_15:58:18.126 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3e7966f6
2015-05-10_15:58:18.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@42f051ad
2015-05-10_15:58:18.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@42f051ad
2015-05-10_15:58:18.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@42f051ad
2015-05-10_15:58:18.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5da18f83
2015-05-10_15:58:18.132 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5da18f83
2015-05-10_15:58:18.134 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@624b3108
2015-05-10_15:58:18.134 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@624b3108
2015-05-10_15:58:18.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2a7cc368
2015-05-10_15:58:18.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2a7cc368
2015-05-10_15:58:18.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@64ba3685
2015-05-10_15:58:18.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@64ba3685
2015-05-10_15:58:18.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5c14d21e
2015-05-10_15:58:18.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5c14d21e
2015-05-10_15:58:18.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@522998b2
2015-05-10_15:58:18.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@522998b2
2015-05-10_15:58:18.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@f2e10ec
2015-05-10_15:58:18.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@f2e10ec
2015-05-10_15:58:18.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@f2e10ec
2015-05-10_15:58:18.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5c3aa2bf
2015-05-10_15:58:18.163 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@15f7a45
2015-05-10_15:58:18.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@15f7a45
2015-05-10_15:58:18.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@15f7a45
2015-05-10_15:58:18.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d4daade
2015-05-10_15:58:18.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3cf4ef9c
2015-05-10_15:58:18.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3cf4ef9c
2015-05-10_15:58:18.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1243a94c
2015-05-10_15:58:18.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1243a94c
2015-05-10_15:58:18.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d466c8b
2015-05-10_15:58:18.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d466c8b
2015-05-10_15:58:18.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7409dedd
2015-05-10_15:58:18.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7409dedd
2015-05-10_15:58:18.178 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b6400b2
2015-05-10_15:58:18.179 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b6400b2
2015-05-10_15:58:18.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5618bde6
2015-05-10_15:58:18.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7cebbb4a
2015-05-10_15:58:18.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7bfe8604
2015-05-10_15:58:18.184 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7bfe8604
2015-05-10_15:58:18.184 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7bfe8604
2015-05-10_15:58:18.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@38cab151
2015-05-10_15:58:18.239 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@38cab151
2015-05-10_15:58:18.239 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@38cab151
2015-05-10_15:58:18.245 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@267f6c94
2015-05-10_15:58:18.247 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6cd765eb
2015-05-10_15:58:18.247 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6cd765eb
2015-05-10_15:58:18.248 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6cd765eb
2015-05-10_15:58:18.250 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7290794e
2015-05-10_15:58:18.250 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7290794e
2015-05-10_15:58:18.250 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7290794e
2015-05-10_15:58:18.252 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4338c7a4
2015-05-10_15:58:18.264 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@95eb206
2015-05-10_15:58:18.265 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@95eb206
2015-05-10_15:58:18.266 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3bdd176d
2015-05-10_15:58:18.272 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@993bf54
2015-05-10_15:58:18.273 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@993bf54
2015-05-10_15:58:18.274 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@30613278
2015-05-10_15:58:18.276 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@fa7d76f
2015-05-10_15:58:18.281 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@41c3940f
2015-05-10_15:58:18.285 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@41c3940f
2015-05-10_15:58:18.286 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31b98f24
2015-05-10_15:58:18.288 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6c8706f0
2015-05-10_15:58:18.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@a3f33e8
2015-05-10_15:58:18.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18df4c58
2015-05-10_15:58:18.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65e230c8
2015-05-10_15:58:18.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31060a02
2015-05-10_15:58:18.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4255dfb9
2015-05-10_15:58:18.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@208af627
2015-05-10_15:58:18.314 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-10_15:58:18.322 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-10_15:58:18.325 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-10_15:58:18.328 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-10_15:58:18.342 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-10_15:58:18.343 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-10_15:58:18.345 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_15:58:18.349 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_15:58:18.351 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-10_15:58:18.351 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-10_15:58:18.352 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-10_15:58:18.353 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-10_15:58:18.354 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-10_15:58:18.354 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-10_15:58:18.355 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-10_15:58:18.355 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-10_15:58:18.356 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-10_15:58:18.357 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-10_15:58:18.358 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-10_15:58:18.362 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-10_15:58:18.362 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-10_15:58:18.392 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-10_15:58:18.393 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-10_15:58:18.396 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-10_15:58:18.397 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-10_16:01:44.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5c2438c9
2015-05-10_16:01:44.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5c2438c9
2015-05-10_16:01:44.464 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5c2438c9
2015-05-10_16:01:44.465 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@199537fa
2015-05-10_16:01:44.467 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@39541076
2015-05-10_16:01:44.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3339caab
2015-05-10_16:01:44.472 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2d1da545
2015-05-10_16:01:44.472 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2d1da545
2015-05-10_16:01:44.472 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d1da545
2015-05-10_16:01:44.473 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2c10beea
2015-05-10_16:01:44.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2c10beea
2015-05-10_16:01:44.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c10beea
2015-05-10_16:01:44.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2b0e8a17
2015-05-10_16:01:44.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2b0e8a17
2015-05-10_16:01:44.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2b0e8a17
2015-05-10_16:01:44.479 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@53353c7a
2015-05-10_16:01:44.479 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@53353c7a
2015-05-10_16:01:44.483 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@53353c7a
2015-05-10_16:01:44.486 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@66447d5e
2015-05-10_16:01:44.486 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@66447d5e
2015-05-10_16:01:44.486 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@66447d5e
2015-05-10_16:01:44.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4273b4ef
2015-05-10_16:01:44.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4273b4ef
2015-05-10_16:01:44.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4273b4ef
2015-05-10_16:01:44.490 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@f46a2fb
2015-05-10_16:01:44.490 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@f46a2fb
2015-05-10_16:01:44.490 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f46a2fb
2015-05-10_16:01:44.492 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6458a431
2015-05-10_16:01:44.492 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6458a431
2015-05-10_16:01:44.494 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@15a51dd1
2015-05-10_16:01:44.494 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@15a51dd1
2015-05-10_16:01:44.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2f70586
2015-05-10_16:01:44.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2f70586
2015-05-10_16:01:44.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@373de13c
2015-05-10_16:01:44.502 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@373de13c
2015-05-10_16:01:44.507 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@11916c17
2015-05-10_16:01:44.507 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@11916c17
2015-05-10_16:01:44.509 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@15ff1bc2
2015-05-10_16:01:44.510 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15ff1bc2
2015-05-10_16:01:44.514 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4817e74b
2015-05-10_16:01:44.514 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4817e74b
2015-05-10_16:01:44.515 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4817e74b
2015-05-10_16:01:44.516 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7b10d1a4
2015-05-10_16:01:44.520 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3bb10ce7
2015-05-10_16:01:44.520 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3bb10ce7
2015-05-10_16:01:44.520 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3bb10ce7
2015-05-10_16:01:44.521 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7653b71c
2015-05-10_16:01:44.522 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3ac4f3e1
2015-05-10_16:01:44.523 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3ac4f3e1
2015-05-10_16:01:44.527 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1bdf9fff
2015-05-10_16:01:44.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1bdf9fff
2015-05-10_16:01:44.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7a5a8a0a
2015-05-10_16:01:44.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7a5a8a0a
2015-05-10_16:01:44.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@11c233e1
2015-05-10_16:01:44.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@11c233e1
2015-05-10_16:01:44.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@611835d
2015-05-10_16:01:44.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@611835d
2015-05-10_16:01:44.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@227f4147
2015-05-10_16:01:44.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3ea93c87
2015-05-10_16:01:44.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@71f7107
2015-05-10_16:01:44.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@71f7107
2015-05-10_16:01:44.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@71f7107
2015-05-10_16:01:44.541 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d24efa3
2015-05-10_16:01:44.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d24efa3
2015-05-10_16:01:44.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d24efa3
2015-05-10_16:01:44.548 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5b3a11e3
2015-05-10_16:01:44.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@19a646e3
2015-05-10_16:01:44.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@19a646e3
2015-05-10_16:01:44.550 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@19a646e3
2015-05-10_16:01:44.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3100b51
2015-05-10_16:01:44.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3100b51
2015-05-10_16:01:44.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3100b51
2015-05-10_16:01:44.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@c738c2b
2015-05-10_16:01:44.559 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d122a55
2015-05-10_16:01:44.559 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d122a55
2015-05-10_16:01:44.560 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5ec85e71
2015-05-10_16:01:44.564 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@598d8558
2015-05-10_16:01:44.565 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@598d8558
2015-05-10_16:01:44.565 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5bbcabc4
2015-05-10_16:01:44.567 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@e7d68a5
2015-05-10_16:01:44.570 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6943c1a5
2015-05-10_16:01:44.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6943c1a5
2015-05-10_16:01:44.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6383feb
2015-05-10_16:01:44.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71819860
2015-05-10_16:01:44.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a097d0e
2015-05-10_16:01:44.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6aa8a921
2015-05-10_16:01:44.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2da804f8
2015-05-10_16:01:44.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5017cbb5
2015-05-10_16:01:44.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@21872db4
2015-05-10_16:01:44.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e496904
2015-05-10_16:01:44.607 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-10_16:01:44.614 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-10_16:01:44.616 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-10_16:01:44.619 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-10_16:01:44.632 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-10_16:01:44.633 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-10_16:01:44.633 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_16:01:44.637 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_16:01:44.639 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-10_16:01:44.639 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-10_16:01:44.641 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-10_16:01:44.641 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-10_16:01:44.642 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-10_16:01:44.642 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-10_16:01:44.643 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-10_16:01:44.644 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-10_16:01:44.644 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-10_16:01:44.645 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-10_16:01:44.646 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-10_16:01:44.648 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-10_16:01:44.648 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-10_16:01:44.673 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-10_16:01:44.673 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-10_16:01:44.677 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-10_16:01:44.678 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-10_16:10:01.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@44ec24c3
2015-05-10_16:10:01.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@44ec24c3
2015-05-10_16:10:01.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@44ec24c3
2015-05-10_16:10:01.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29111ce8
2015-05-10_16:10:01.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@41f4582f
2015-05-10_16:10:01.445 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7b4638e
2015-05-10_16:10:01.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1558ac79
2015-05-10_16:10:01.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1558ac79
2015-05-10_16:10:01.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1558ac79
2015-05-10_16:10:01.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@704ab046
2015-05-10_16:10:01.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@704ab046
2015-05-10_16:10:01.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@704ab046
2015-05-10_16:10:01.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@be578fb
2015-05-10_16:10:01.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@be578fb
2015-05-10_16:10:01.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@be578fb
2015-05-10_16:10:01.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1b9044ca
2015-05-10_16:10:01.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1b9044ca
2015-05-10_16:10:01.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b9044ca
2015-05-10_16:10:01.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@726fe002
2015-05-10_16:10:01.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@726fe002
2015-05-10_16:10:01.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@726fe002
2015-05-10_16:10:01.464 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@680eaecb
2015-05-10_16:10:01.465 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@680eaecb
2015-05-10_16:10:01.465 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@680eaecb
2015-05-10_16:10:01.467 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3caf98af
2015-05-10_16:10:01.467 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3caf98af
2015-05-10_16:10:01.467 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3caf98af
2015-05-10_16:10:01.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c66352
2015-05-10_16:10:01.470 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c66352
2015-05-10_16:10:01.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@500c135a
2015-05-10_16:10:01.472 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@500c135a
2015-05-10_16:10:01.473 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2ba402b2
2015-05-10_16:10:01.473 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2ba402b2
2015-05-10_16:10:01.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1420e37f
2015-05-10_16:10:01.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1420e37f
2015-05-10_16:10:01.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@22654d53
2015-05-10_16:10:01.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@22654d53
2015-05-10_16:10:01.482 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6e303c07
2015-05-10_16:10:01.483 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6e303c07
2015-05-10_16:10:01.487 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@48b9680a
2015-05-10_16:10:01.487 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@48b9680a
2015-05-10_16:10:01.487 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@48b9680a
2015-05-10_16:10:01.489 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@151b514e
2015-05-10_16:10:01.490 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1fd4293
2015-05-10_16:10:01.491 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1fd4293
2015-05-10_16:10:01.491 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1fd4293
2015-05-10_16:10:01.492 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@a65d35f
2015-05-10_16:10:01.494 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@584e9435
2015-05-10_16:10:01.494 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@584e9435
2015-05-10_16:10:01.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3e4ead59
2015-05-10_16:10:01.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e4ead59
2015-05-10_16:10:01.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d988719
2015-05-10_16:10:01.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d988719
2015-05-10_16:10:01.502 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@26da0bf0
2015-05-10_16:10:01.502 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26da0bf0
2015-05-10_16:10:01.504 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f7ddf14
2015-05-10_16:10:01.505 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f7ddf14
2015-05-10_16:10:01.506 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50955dc4
2015-05-10_16:10:01.507 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1903db64
2015-05-10_16:10:01.550 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@11f3e1a6
2015-05-10_16:10:01.550 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@11f3e1a6
2015-05-10_16:10:01.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@11f3e1a6
2015-05-10_16:10:01.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6d5d6127
2015-05-10_16:10:01.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6d5d6127
2015-05-10_16:10:01.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6d5d6127
2015-05-10_16:10:01.557 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@190314cd
2015-05-10_16:10:01.558 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4dcf2ef3
2015-05-10_16:10:01.558 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dcf2ef3
2015-05-10_16:10:01.559 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4dcf2ef3
2015-05-10_16:10:01.560 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@d65b7a8
2015-05-10_16:10:01.560 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@d65b7a8
2015-05-10_16:10:01.560 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@d65b7a8
2015-05-10_16:10:01.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@35064322
2015-05-10_16:10:01.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@18be112c
2015-05-10_16:10:01.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@18be112c
2015-05-10_16:10:01.570 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1dd99c34
2015-05-10_16:10:01.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@52fbde9b
2015-05-10_16:10:01.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@52fbde9b
2015-05-10_16:10:01.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@68946290
2015-05-10_16:10:01.576 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@60241496
2015-05-10_16:10:01.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1b8c1cf2
2015-05-10_16:10:01.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b8c1cf2
2015-05-10_16:10:01.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6ff96ab1
2015-05-10_16:10:01.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@14698030
2015-05-10_16:10:01.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2286a3ae
2015-05-10_16:10:01.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7940ae63
2015-05-10_16:10:01.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d48ef18
2015-05-10_16:10:01.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f89c81
2015-05-10_16:10:01.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1274d443
2015-05-10_16:10:01.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6e3b53d8
2015-05-10_16:10:01.600 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-10_16:10:01.605 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-10_16:10:01.607 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-10_16:10:01.608 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-10_16:10:01.619 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-10_16:10:01.619 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-10_16:10:01.620 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_16:10:01.623 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_16:10:01.624 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-10_16:10:01.624 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-10_16:10:01.625 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-10_16:10:01.626 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-10_16:10:01.626 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-10_16:10:01.627 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-10_16:10:01.627 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-10_16:10:01.628 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-10_16:10:01.628 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-10_16:10:01.629 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-10_16:10:01.630 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-10_16:10:01.633 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-10_16:10:01.633 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-10_16:10:01.656 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-10_16:10:01.656 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-10_16:10:01.658 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-10_16:10:01.659 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
2015-05-10_16:14:34.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@49217551
2015-05-10_16:14:34.113 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@49217551
2015-05-10_16:14:34.113 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@49217551
2015-05-10_16:14:34.114 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16b8fa03
2015-05-10_16:14:34.115 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@34e9899f
2015-05-10_16:14:34.116 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@32250424
2015-05-10_16:14:34.118 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@17e7bb8b
2015-05-10_16:14:34.118 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@17e7bb8b
2015-05-10_16:14:34.118 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17e7bb8b
2015-05-10_16:14:34.119 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@18261750
2015-05-10_16:14:34.119 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@18261750
2015-05-10_16:14:34.120 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@18261750
2015-05-10_16:14:34.121 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@54977077
2015-05-10_16:14:34.121 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@54977077
2015-05-10_16:14:34.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@54977077
2015-05-10_16:14:34.124 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@14ea5e5e
2015-05-10_16:14:34.124 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@14ea5e5e
2015-05-10_16:14:34.127 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14ea5e5e
2015-05-10_16:14:34.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6b5968ad
2015-05-10_16:14:34.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6b5968ad
2015-05-10_16:14:34.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6b5968ad
2015-05-10_16:14:34.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@106c91d8
2015-05-10_16:14:34.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@106c91d8
2015-05-10_16:14:34.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@106c91d8
2015-05-10_16:14:34.132 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@30a9fdfe
2015-05-10_16:14:34.133 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@30a9fdfe
2015-05-10_16:14:34.133 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@30a9fdfe
2015-05-10_16:14:34.134 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@ef17c9
2015-05-10_16:14:34.135 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@ef17c9
2015-05-10_16:14:34.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@322a1db7
2015-05-10_16:14:34.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@322a1db7
2015-05-10_16:14:34.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@be0824e
2015-05-10_16:14:34.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@be0824e
2015-05-10_16:14:34.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2084164b
2015-05-10_16:14:34.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2084164b
2015-05-10_16:14:34.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@60ff3fc8
2015-05-10_16:14:34.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60ff3fc8
2015-05-10_16:14:34.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4eabda8e
2015-05-10_16:14:34.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4eabda8e
2015-05-10_16:14:34.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1789dd54
2015-05-10_16:14:34.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1789dd54
2015-05-10_16:14:34.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1789dd54
2015-05-10_16:14:34.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@580ac26
2015-05-10_16:14:34.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4176db9f
2015-05-10_16:14:34.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4176db9f
2015-05-10_16:14:34.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4176db9f
2015-05-10_16:14:34.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@a903230
2015-05-10_16:14:34.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6849e19f
2015-05-10_16:14:34.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6849e19f
2015-05-10_16:14:34.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5e3e3696
2015-05-10_16:14:34.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5e3e3696
2015-05-10_16:14:34.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b1afe9
2015-05-10_16:14:34.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b1afe9
2015-05-10_16:14:34.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3eab2e8a
2015-05-10_16:14:34.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3eab2e8a
2015-05-10_16:14:34.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3f1cd6b
2015-05-10_16:14:34.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3f1cd6b
2015-05-10_16:14:34.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b8fb969
2015-05-10_16:14:34.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3e6b74f
2015-05-10_16:14:34.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@58da19d7
2015-05-10_16:14:34.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@58da19d7
2015-05-10_16:14:34.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@58da19d7
2015-05-10_16:14:34.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ef8c026
2015-05-10_16:14:34.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ef8c026
2015-05-10_16:14:34.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ef8c026
2015-05-10_16:14:34.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6085d4b1
2015-05-10_16:14:34.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@65bddcad
2015-05-10_16:14:34.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@65bddcad
2015-05-10_16:14:34.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@65bddcad
2015-05-10_16:14:34.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@de9235c
2015-05-10_16:14:34.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@de9235c
2015-05-10_16:14:34.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@de9235c
2015-05-10_16:14:34.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@53fa51b3
2015-05-10_16:14:34.226 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@44499724
2015-05-10_16:14:34.226 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@44499724
2015-05-10_16:14:34.226 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33a5568a
2015-05-10_16:14:34.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4f2933cb
2015-05-10_16:14:34.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f2933cb
2015-05-10_16:14:34.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3650e812
2015-05-10_16:14:34.232 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@496c79d7
2015-05-10_16:14:34.235 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5a8afd78
2015-05-10_16:14:34.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a8afd78
2015-05-10_16:14:34.240 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cd5d4fb
2015-05-10_16:14:34.241 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@31b98f24
2015-05-10_16:14:34.242 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6c8706f0
2015-05-10_16:14:34.242 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a3f33e8
2015-05-10_16:14:34.242 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18df4c58
2015-05-10_16:14:34.242 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@65e230c8
2015-05-10_16:14:34.242 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@31060a02
2015-05-10_16:14:34.242 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4255dfb9
2015-05-10_16:14:34.258 [JavaFX Application Thread] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2015-05-10_16:14:34.263 [JavaFX Application Thread] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.1.9.Final}
2015-05-10_16:14:34.265 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2015-05-10_16:14:34.266 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
2015-05-10_16:14:34.276 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2015-05-10_16:14:34.277 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2015-05-10_16:14:34.278 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_16:14:34.280 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2015-05-10_16:14:34.281 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2015-05-10_16:14:34.282 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2015-05-10_16:14:34.283 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2015-05-10_16:14:34.283 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2015-05-10_16:14:34.284 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2015-05-10_16:14:34.284 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2015-05-10_16:14:34.285 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2015-05-10_16:14:34.285 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2015-05-10_16:14:34.286 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2015-05-10_16:14:34.286 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-05-10_16:14:34.287 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2015-05-10_16:14:34.289 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000043: Configuring from resource: /hibernate.cfg.xml
2015-05-10_16:14:34.289 [JavaFX Application Thread] INFO  org.hibernate.cfg.Configuration - HHH000040: Configuration resource: /hibernate.cfg.xml
2015-05-10_16:14:34.310 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
2015-05-10_16:14:34.310 [JavaFX Application Thread] WARN  o.h.i.util.xml.DTDEntityResolver - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-05-10_16:14:34.313 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Attempting to resolve on classpath under org/hibernate/
2015-05-10_16:14:34.313 [JavaFX Application Thread] DEBUG o.h.i.util.xml.DTDEntityResolver - Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
